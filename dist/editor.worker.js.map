{"version":3,"sources":["webpack://MonacoEditor/webpack/bootstrap","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/base/common/platform.js","webpack://MonacoEditor/./node_modules/node-libs-browser/mock/process.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/base/common/winjs.base.js","webpack://MonacoEditor/(webpack)/buildin/global.js","webpack://MonacoEditor/./node_modules/path-browserify/index.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/base/common/uri.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/editor/common/core/position.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/editor/common/core/range.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/base/common/strings.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/editor/common/core/uint.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/base/common/errors.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/base/common/functional.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/base/common/event.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/base/common/linkedList.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/base/common/cancellation.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/editor/common/core/token.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/base/common/async.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","webpack://MonacoEditor/./node_modules/monaco-editor/esm/vs/editor/editor.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","process","global","__webpack_exports__","isWindows","isWeb","globals","Platform","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_locale","undefined","LANGUAGE_DEFAULT","nextTick","platform","rawNlsConfig","NODE_ENV","BASE_URL","nlsConfig","JSON","parse","resolved","availableLanguages","locale","_translationsConfigFile","e","navigator","userAgent","indexOf","language","Web","Mac","Windows","Linux","_globals","self","fn","setTimeout","arch","execPath","title","pid","browser","env","argv","binding","Error","path","cwd","chdir","dir","resolve","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","__winjs_exports","TPromise","_modules","_winjs","deps","factory","exportsPassedIn","depsValues","map","dep","result","apply","globalObject","window","_Global","hasWinRT","markSupportedForProcessing","func","supportedForProcessing","actualSetImmediate","_setImmediate","callback","setImmediate","msWriteProfilerMark","_WinJS","_BaseCoreUtils","_WriteProfilerMark","initializeProperties","target","members","prefix","properties","len","keys","isArray","Array","length","charCodeAt","member","set","forEach","configurable","writable","setName","defineProperties","_rootNamespace","createNamespace","parentNamespace","currentNamespace","namespaceFragments","split","splice","namespaceName","defineWithParent","define","Namespace","LazyStates","uninitialized","working","initialized","lazy","f","state","moduleDefine","publicNS","push","_lazy","_moduleDefine","constructor","instanceMembers","staticMembers","derive","baseClass","basePrototype","mix","arguments","Class","_Base","ErrorFromName","message","this","createEventProperty","eventPropStateName","userHandler","handler","wrapper","evt","addEventListener","removeEventListener","createEventProperties","props","EventMixinEvent","type","detail","timeStamp","Date","now","bubbles","cancelable","currentTarget","defaultPrevented","_preventDefaultCalled","trusted","eventPhase","preventDefault","stopImmediatePropagation","_stopImmediatePropagationCalled","stopPropagation","eventMixin","_listeners","listener","useCapture","eventListeners","dispatchEvent","details","listeners","eventValue","slice","_createEventProperty","nop","v","_traceAsyncOperationStarting","Debug","msTraceAsyncOperationStarting","_traceAsyncOperationCompleted","msTraceAsyncOperationCompleted","_traceAsyncCallbackStarting","msTraceAsyncCallbackStarting","_traceAsyncCallbackCompleted","msTraceAsyncCallbackCompleted","_ErrorFromName","_Events","_Trace","setNonUserCodeExceptions","ListenerType","promiseEventListeners","errorET","canceledName","tagWithStack","tag","promise","thenPromise","errorPromise","exceptionPromise","completePromise","all","state_created","state_working","state_waiting","state_waiting_canceled","state_canceled","state_canceling","state_success_notify","state_success","state_error_notify","state_error","error_number","_","enter","_setState","cancel","done","then","_completed","_error","_notify","_progress","_setCompleteValue","_setErrorValue","completed","error","progress","setCompleteValue","setErrorValue","waitedUpon","_value","ThenPromise","_state","pushListener","_errorId","_chainedError","callonerror","detailsForHandledError","handlesOnError","_cancelAction","CompletePromise","queue","shift","notifySuccess","_cleanupAction","ErrorPromise","notifyError","PromiseStateMachine","_nextState","_run","onComplete","onError","onProgress","Promise_then","context","detailsForChainedError","detailsForError","_setChainedErrorValue","_setExceptionValue","detailsForException","targetState","createErrorDetails","exception","id","parent","errorValue","_isException","errorId","setErrorInfo","exceptionValue","asyncOpID","onerrorDetails","MS_ASYNC_OP_STATUS_SUCCESS","ex","errorID","MS_ASYNC_OP_STATUS_CANCELED","MS_ASYNC_OP_STATUS_ERROR","asyncCallbackStarted","onerrorDetailsGenerator","isException","staticCanceledPromise","creator","_stack","Promise","_getStack","_creator","unused","_doneHandler","ExceptionPromise","newValue","timeout","timeoutMS","clearTimeout","timeoutWithPromise","cancelPromise","cancelTimeout","init","oncancel","_oncancel","complete","stack","eventType","capture","any","values","canceled","as","is","join","errors","results","undefineds","pending","argDone","errorCount","canceledCount","Key","Done","thenEach","time","to","wrap","wrapError","_veryExpensiveTagWithStack","_veryExpensiveTagWithStack_tag","debuggerEnabled","_cancelBlocker","input","output","_StateMachine","PPromise","g","Function","eval","normalizeArray","parts","allowAboveRoot","up","last","unshift","splitPathRe","splitPath","filename","exec","filter","xs","res","resolvedPath","resolvedAbsolute","TypeError","charAt","normalize","isAbsolute","trailingSlash","substr","paths","index","relative","from","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","root","basename","ext","extname","str","uri_a","__extends","extendStatics","setPrototypeOf","__proto__","b","__","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","ret","scheme","test","authority","_referenceResolution","_slash","_empty","_regexp","uri_URI","URI","schemeOrData","query","fragment","isUri","thing","_makeFsPath","with","change","_URI","match","decodeURIComponent","file","replace","idx","substring","components","toString","skipEncoding","_asFormatted","toJSON","revive","data","_fsPath","fsPath","_formatted","external","common_uri","_super","_this","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","pos","code","encodeURIComponent","escaped","encodeURIComponentMinimal","uri","toLowerCase","encoder","userinfo","String","fromCharCode","Position","lineNumber","column","equals","other","a","isBefore","isBeforeOrEqual","compare","aLineNumber","bLineNumber","aColumn","bColumn","clone","lift","isIPosition","obj","range_Range","Range","startLineNumber","startColumn","endLineNumber","endColumn","isEmpty","range","containsPosition","position","containsRange","otherRange","plusRange","max","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","setEndPosition","setStartPosition","collapseToStart","fromPositions","isIRange","areIntersectingOrTouching","areIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","aEndColumn","bEndColumn","compareRangesUsingEnds","spansMultipleLines","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","createStringSequence","getLength","getElementAtIndex","stringDiff","original","modified","pretty","diff_LcsDiff","ComputeDiff","Assert","condition","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","MaxDifferencesHistory","diff_DiffChangeHelper","DiffChangeHelper","m_changes","m_originalStart","Number","MAX_VALUE","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","AddModifiedElement","getChanges","getReverseChanges","reverse","LcsDiff","originalSequence","newSequence","continueProcessingPredicate","OriginalSequence","ModifiedSequence","ContinueProcessingPredicate","m_forwardHistory","m_reverseHistory","ElementsAreEqual","newIndex","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","changes","ComputeDiffRecursive","ShiftChanges","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","diagonal","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","MIN_VALUE","historyIndex","originalStartPoint","modifiedStartPoint","lastForwardChange","numDifferences","tempOriginalIndex","maxDifferences","numDiagonals","delta","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","abs","matchLengthOfLongest","temp","mergedDiffs","originalStop","modifiedStop","checkOriginal","checkModified","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","score","_OriginalIsBoundary","element","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","originalScore","modifiedScore","left","right","diagonalBaseIndex","diagonalsBelow","diagonalsAbove","diffEven","lowerBoundEven","upperBoundEven","firstNonWhitespaceIndex","chCode","lastNonWhitespaceIndex","startIndex","MAXIMUM_RUN_TIME","MINIMUM_MATCHING_CHARACTER_LENGTH","computeDiff","modifiedSequence","diffAlgo","diffComputer_LineMarkerSequence","LineMarkerSequence","lines","startColumns","endColumns","length_1","_getFirstNonBlankColumn","_getLastNonBlankColumn","_lines","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","txt","defaultValue","getCharSequence","shouldIgnoreTrimWhitespace","endIndex","charCodes","lineNumbers","columns","lineContent","col","CharSequence","_charCodes","_lineNumbers","_columns","getStartColumn","getEndColumn","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","postProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","matchingLength","LineChange","charChanges","createFromDiffResult","originalLineSequence","modifiedLineSequence","shouldComputeCharChanges","shouldPostProcessCharChanges","length_2","DiffComputer","originalLines","modifiedLines","opts","shouldMakePrettyDiff","maximumRunTimeMs","computationStartTime","getTime","_continueProcessingPredicate","lineChanges","length_3","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","originalChar","modifiedChar","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","Uint8Matrix","rows","cols","Uint8Array","_data","row","toUint8","toUint32","PrefixSumIndexOfResult","remainder","prefixSumComputer_PrefixSumComputer","PrefixSumComputer","prefixSum","Uint32Array","prefixSumValidIndex","Int32Array","getCount","insertValues","insertIndex","oldValues","oldPrefixSum","insertValuesLen","subarray","changeValue","removeValues","cnt","maxCnt","getTotalValue","_getAccumulatedValue","getAccumulatedValue","getIndexOf","accumulatedValue","floor","mid","midStop","midStart","low","high","mirrorTextModel_MirrorTextModel","PrefixSumComputerWithCache","_cacheAccumulatedValueStart","_cache","_actual","_bustCache","cacheIndex","warmUpCache","accumulatedValueStart","accumulatedValueEnd","newCache","MirrorTextModel","eol","versionId","_uri","_eol","_versionId","dispose","getText","onEvents","_lineStarts","_acceptDeleteRange","_acceptInsertText","text","_ensureLineStarts","eolLength","linesLength","lineStartValues","_setLineText","lineIndex","insertText","insertLines","newLengths","characterClassifier_CharacterClassifier","CharacterClassifier","_defaultValue","_asciiMap","_createAsciiMap","_map","Map","asciiMap","charCode","linkComputer_StateMachine","CharacterSet","add","has","StateMachine","edges","maxCharCode","maxState","_a","states","_b","_states","_maxCharCode","nextState","currentState","_stateMachine","getStateMachine","_classifier","getClassifier","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","LinkComputer","_createLink","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","chClass","charCodeBeforeLink","lastCharCodeInLink","url","computeLinks","model","stateMachine","lineCount","getLineCount","getLineContent","j","linkBeginChCode","hasOpenParens","hasOpenSquareBracket","hasOpenCurlyBracket","resetStateMachine","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","lastIndexOf","n1","n2","parseFloat","isNaN","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","USUAL_WORD_SEPARATORS","createWordRegExp","allowInWords","source","RegExp","DEFAULT_WORD_REGEXP","ensureValidWordDefinition","wordDefinition","flags","ignoreCase","multiline","lastIndex","getWordAtPosFast","textOffset","word","getWordAtPosSlow","getWordAtText","outstandingPromiseErrors","promiseErrorHandler","onUnexpectedError","console","log","winjs_base","ErrorHandler","unexpectedErrorHandler","emit","onUnexpectedExternalError","errorHandler","isPromiseCanceledError","transformErrorForSerialization","name_1","stacktrace","$isError","once","didCall","lifecycle_dispose","first","rest","_i","toDisposable","Event","Disposable","_toDispose","_register","None","freeze","Node","ImmortalReference","LinkedList","_first","insert","atTheEnd","newNode","oldLast","_last","prev","next","oldFirst","candidate","anchor","iterator","node","_disposable","event_Emitter","Emitter","_options","_event","thisArgs","disposables","firstListener","onFirstListenerAdd","remove","onFirstListenerDidAdd","onListenerDidAdd","_noop","_disposed","onLastListenerRemove","fire","event","_deliveryQueue","iter","event_1","EventMultiplexer","hasListeners","events","emitter","hook","unhook","EventBufferer","buffers","wrapEvent","buffer","bufferEvents","pop","flush","mapEvent","filterEvent","ChainableEvent","on","Relay","disposable","KeyCodeUtils","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","keyCode","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","KeyChord","firstPart","secondPart","chordPart","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","SimpleKeybinding","ctrlKey","shiftKey","altKey","metaKey","isModifierKey","isDuplicateModifierCase","ChordKeybinding","ResolvedKeybindingPart","kbLabel","kbAriaLabel","keyLabel","keyAriaLabel","ResolvedKeybinding","SelectionDirection","selection_extends","cancellation_CancellationToken","selection_Selection","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","LTR","RTL","getPosition","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction","shortcutEvent","handle","CancellationToken","isCancellationRequested","onCancellationRequested","Cancelled","MarkerTag","MarkerSeverity","cancellation_MutableToken","MutableToken","_isCancelled","_emitter","CancellationTokenSource","_token","Token","offset","TokenizationResult","tokens","endState","TokenizationResult2","KeyCode","standaloneBase_KeyMod","KeyMod","chord","CtrlCmd","Shift","Alt","WinCtrl","createMonacoBaseAPI","editor","languages","Uri","editorSimpleWorker_extends","editorSimpleWorker_MirrorModel","MirrorModel","getValue","getLinesContent","getWordAtPosition","wordAtText","getWordUntilPosition","wordAtPosition","createWordIterator","lineText","wordRangesIdx","wordRanges","_wordenize","content","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","positionAt","out","lineLength","hasChanged","maxCharacter","editorSimpleWorker_BaseEditorSimpleWorker","BaseEditorSimpleWorker","foreignModuleFactory","_foreignModuleFactory","_foreignModule","originalUrl","modifiedUrl","ignoreTrimWhitespace","_getModel","diffComputer","computeMoreMinimalEdits","modelUrl","edits","lastEol","edits_1","_diffLimit","editOffset","changes_1","newEdit","textualSuggest","wordDef","wordDefFlags","suggestions","wordDefRegExp","currentWord","seen","_suggestionsLimit","label","noAutoAccept","overwriteBefore","selectionText","wordRange","loadForeignModule","createData","ctx","getMirrorModels","_getModels","methods","prop","fmr","method","args","editorSimpleWorker_EditorSimpleWorkerImpl","EditorSimpleWorkerImpl","_models","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","importScripts","monaco","async_extends","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete_1","err","Delayer","defaultDelay","completionPromise","onSuccess","task","trigger","delay","async_ShallowCancelThenPromise","ShallowCancelThenPromise","outer","completeCallback","errorCallback","progressCallback","TimeoutTimer","cancelAndSet","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","onTimeout","isScheduled","schedule","doRun","simpleWorker_extends","INITIALIZE","simpleWorker_SimpleWorkerProtocol","SimpleWorkerProtocol","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","req","reply","_send","vsWorker","handleMessage","serializedMessage","_handleMessage","msg","seq","replyMessage","warn","requestMessage","strMsg","stringify","simpleWorker_SimpleWorkerServer","SimpleWorkerClient","workerFactory","lazyProxyFulfill","lazyProxyReject","_worker","_protocol","postMessage","getId","loaderConfiguration","require","getConfig","requirejs","contexts","config","_lazyProxy","_onModuleLoaded","availableMethods","proxy","createProxyMethod","proxyMethodRequest","_onError","_request","getProxyObject","info","SimpleWorkerServer","postSerializedMessage","requestHandler","_requestHandler","onmessage","initialize","loaderConfig","cc","ee","baseUrl","vs","catchError","handlerModule","foreignModule","editorWorker","simpleWorker"],"mappings":"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","file":"editor.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"e500\");\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar _isWindows = false;\nvar _isMacintosh = false;\nvar _isLinux = false;\nvar _isNative = false;\nvar _isWeb = false;\nvar _locale = undefined;\nvar _language = undefined;\nvar _translationsConfigFile = undefined;\nexport var LANGUAGE_DEFAULT = 'en';\n// OS detection\nif (typeof process === 'object' && typeof process.nextTick === 'function' && typeof process.platform === 'string') {\n    _isWindows = (process.platform === 'win32');\n    _isMacintosh = (process.platform === 'darwin');\n    _isLinux = (process.platform === 'linux');\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            var nlsConfig = JSON.parse(rawNlsConfig);\n            var resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\nelse if (typeof navigator === 'object') {\n    var userAgent = navigator.userAgent;\n    _isWindows = userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n    _isLinux = userAgent.indexOf('Linux') >= 0;\n    _isWeb = true;\n    _locale = navigator.language;\n    _language = _locale;\n}\nexport var Platform;\n(function (Platform) {\n    Platform[Platform[\"Web\"] = 0] = \"Web\";\n    Platform[Platform[\"Mac\"] = 1] = \"Mac\";\n    Platform[Platform[\"Linux\"] = 2] = \"Linux\";\n    Platform[Platform[\"Windows\"] = 3] = \"Windows\";\n})(Platform || (Platform = {}));\nvar _platform = Platform.Web;\nif (_isNative) {\n    if (_isMacintosh) {\n        _platform = Platform.Mac;\n    }\n    else if (_isWindows) {\n        _platform = Platform.Windows;\n    }\n    else if (_isLinux) {\n        _platform = Platform.Linux;\n    }\n}\nexport var isWindows = _isWindows;\nexport var isMacintosh = _isMacintosh;\nexport var isLinux = _isLinux;\nexport var isNative = _isNative;\nexport var isWeb = _isWeb;\nvar _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nexport var globals = _globals;\nvar _setImmediate = null;\nexport function setImmediate(callback) {\n    if (_setImmediate === null) {\n        if (globals.setImmediate) {\n            _setImmediate = globals.setImmediate.bind(globals);\n        }\n        else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n            _setImmediate = process.nextTick.bind(process);\n        }\n        else {\n            _setImmediate = globals.setTimeout.bind(globals);\n        }\n    }\n    return _setImmediate(callback);\n}\nexport var OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\n","exports.nextTick = function nextTick(fn) {\n\tsetTimeout(fn, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","/**\n * Extracted from https://github.com/winjs/winjs\n * Version: 4.4.0(ec3258a9f3a36805a187848984e3bb938044178d)\n * Copyright (c) Microsoft Corporation.\n * All Rights Reserved.\n * Licensed under the MIT License.\n */\nvar __winjs_exports;\n\n(function() {\n\nvar _modules = Object.create(null);//{};\n_modules[\"WinJS/Core/_WinJS\"] = {};\n\nvar _winjs = function(moduleId, deps, factory) {\n    var exports = {};\n    var exportsPassedIn = false;\n\n    var depsValues = deps.map(function(dep) {\n        if (dep === 'exports') {\n            exportsPassedIn = true;\n            return exports;\n        }\n        return _modules[dep];\n    });\n\n    var result = factory.apply({}, depsValues);\n\n    _modules[moduleId] = exportsPassedIn ? exports : result;\n};\n\n\n_winjs(\"WinJS/Core/_Global\", [], function () {\n    \"use strict\";\n\n    // Appease jshint\n    /* global window, self, global */\n\n    var globalObject =\n        typeof window !== 'undefined' ? window :\n        typeof self !== 'undefined' ? self :\n        typeof global !== 'undefined' ? global :\n        {};\n    return globalObject;\n});\n\n_winjs(\"WinJS/Core/_BaseCoreUtils\", [\"WinJS/Core/_Global\"], function baseCoreUtilsInit(_Global) {\n    \"use strict\";\n\n    var hasWinRT = !!_Global.Windows;\n\n    function markSupportedForProcessing(func) {\n        /// <signature helpKeyword=\"WinJS.Utilities.markSupportedForProcessing\">\n        /// <summary locid=\"WinJS.Utilities.markSupportedForProcessing\">\n        /// Marks a function as being compatible with declarative processing, such as WinJS.UI.processAll\n        /// or WinJS.Binding.processAll.\n        /// </summary>\n        /// <param name=\"func\" type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_p:func\">\n        /// The function to be marked as compatible with declarative processing.\n        /// </param>\n        /// <returns type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_returnValue\">\n        /// The input function.\n        /// </returns>\n        /// </signature>\n        func.supportedForProcessing = true;\n        return func;\n    }\n\n    var actualSetImmediate = null;\n\n    return {\n        hasWinRT: hasWinRT,\n        markSupportedForProcessing: markSupportedForProcessing,\n        _setImmediate: function (callback) {\n            // BEGIN monaco change\n            if (actualSetImmediate === null) {\n                if (_Global.setImmediate) {\n                    actualSetImmediate = _Global.setImmediate.bind(_Global);\n                } else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n                    actualSetImmediate = process.nextTick.bind(process);\n                } else {\n                    actualSetImmediate = _Global.setTimeout.bind(_Global);\n                }\n            }\n            actualSetImmediate(callback);\n            // END monaco change\n        }\n    };\n});\n_winjs(\"WinJS/Core/_WriteProfilerMark\", [\"WinJS/Core/_Global\"], function profilerInit(_Global) {\n    \"use strict\";\n\n    return _Global.msWriteProfilerMark || function () { };\n});\n_winjs(\"WinJS/Core/_Base\", [\"WinJS/Core/_WinJS\",\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_WriteProfilerMark\"], function baseInit(_WinJS, _Global, _BaseCoreUtils, _WriteProfilerMark) {\n    \"use strict\";\n\n    function initializeProperties(target, members, prefix) {\n        var keys = Object.keys(members);\n        var isArray = Array.isArray(target);\n        var properties;\n        var i, len;\n        for (i = 0, len = keys.length; i < len; i++) {\n            var key = keys[i];\n            var enumerable = key.charCodeAt(0) !== /*_*/95;\n            var member = members[key];\n            if (member && typeof member === 'object') {\n                if (member.value !== undefined || typeof member.get === 'function' || typeof member.set === 'function') {\n                    if (member.enumerable === undefined) {\n                        member.enumerable = enumerable;\n                    }\n                    if (prefix && member.setName && typeof member.setName === 'function') {\n                        member.setName(prefix + \".\" + key);\n                    }\n                    properties = properties || {};\n                    properties[key] = member;\n                    continue;\n                }\n            }\n            if (!enumerable) {\n                properties = properties || {};\n                properties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true };\n                continue;\n            }\n            if (isArray) {\n                target.forEach(function (target) {\n                    target[key] = member;\n                });\n            } else {\n                target[key] = member;\n            }\n        }\n        if (properties) {\n            if (isArray) {\n                target.forEach(function (target) {\n                    Object.defineProperties(target, properties);\n                });\n            } else {\n                Object.defineProperties(target, properties);\n            }\n        }\n    }\n\n    (function () {\n\n        var _rootNamespace = _WinJS;\n        if (!_rootNamespace.Namespace) {\n            _rootNamespace.Namespace = Object.create(Object.prototype);\n        }\n\n        function createNamespace(parentNamespace, name) {\n            var currentNamespace = parentNamespace || {};\n            if (name) {\n                var namespaceFragments = name.split(\".\");\n                if (currentNamespace === _Global && namespaceFragments[0] === \"WinJS\") {\n                    currentNamespace = _WinJS;\n                    namespaceFragments.splice(0, 1);\n                }\n                for (var i = 0, len = namespaceFragments.length; i < len; i++) {\n                    var namespaceName = namespaceFragments[i];\n                    if (!currentNamespace[namespaceName]) {\n                        Object.defineProperty(currentNamespace, namespaceName,\n                            { value: {}, writable: false, enumerable: true, configurable: true }\n                        );\n                    }\n                    currentNamespace = currentNamespace[namespaceName];\n                }\n            }\n            return currentNamespace;\n        }\n\n        function defineWithParent(parentNamespace, name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.defineWithParent\">\n            /// <summary locid=\"WinJS.Namespace.defineWithParent\">\n            /// Defines a new namespace with the specified name under the specified parent namespace.\n            /// </summary>\n            /// <param name=\"parentNamespace\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:parentNamespace\">\n            /// The parent namespace.\n            /// </param>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.defineWithParent_p:name\">\n            /// The name of the new namespace.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            var currentNamespace = createNamespace(parentNamespace, name);\n\n            if (members) {\n                initializeProperties(currentNamespace, members, name || \"<ANONYMOUS>\");\n            }\n\n            return currentNamespace;\n        }\n\n        function define(name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.define\">\n            /// <summary locid=\"WinJS.Namespace.define\">\n            /// Defines a new namespace with the specified name.\n            /// </summary>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.define_p:name\">\n            /// The name of the namespace. This could be a dot-separated name for nested namespaces.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.define_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.define_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            return defineWithParent(_Global, name, members);\n        }\n\n        var LazyStates = {\n            uninitialized: 1,\n            working: 2,\n            initialized: 3,\n        };\n\n        function lazy(f) {\n            var name;\n            var state = LazyStates.uninitialized;\n            var result;\n            return {\n                setName: function (value) {\n                    name = value;\n                },\n                get: function () {\n                    switch (state) {\n                        case LazyStates.initialized:\n                            return result;\n\n                        case LazyStates.uninitialized:\n                            state = LazyStates.working;\n                            try {\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StartTM\");\n                                result = f();\n                            } finally {\n                                _WriteProfilerMark(\"WinJS.Namespace._lazy:\" + name + \",StopTM\");\n                                state = LazyStates.uninitialized;\n                            }\n                            f = null;\n                            state = LazyStates.initialized;\n                            return result;\n\n                        case LazyStates.working:\n                            throw \"Illegal: reentrancy on initialization\";\n\n                        default:\n                            throw \"Illegal\";\n                    }\n                },\n                set: function (value) {\n                    switch (state) {\n                        case LazyStates.working:\n                            throw \"Illegal: reentrancy on initialization\";\n\n                        default:\n                            state = LazyStates.initialized;\n                            result = value;\n                            break;\n                    }\n                },\n                enumerable: true,\n                configurable: true,\n            };\n        }\n\n        // helper for defining AMD module members\n        function moduleDefine(exports, name, members) {\n            var target = [exports];\n            var publicNS = null;\n            if (name) {\n                publicNS = createNamespace(_Global, name);\n                target.push(publicNS);\n            }\n            initializeProperties(target, members, name || \"<ANONYMOUS>\");\n            return publicNS;\n        }\n\n        // Establish members of the \"WinJS.Namespace\" namespace\n        Object.defineProperties(_rootNamespace.Namespace, {\n\n            defineWithParent: { value: defineWithParent, writable: true, enumerable: true, configurable: true },\n\n            define: { value: define, writable: true, enumerable: true, configurable: true },\n\n            _lazy: { value: lazy, writable: true, enumerable: true, configurable: true },\n\n            _moduleDefine: { value: moduleDefine, writable: true, enumerable: true, configurable: true }\n\n        });\n\n    })();\n\n    (function () {\n\n        function define(constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.define\">\n            /// <summary locid=\"WinJS.Class.define\">\n            /// Defines a class using the given constructor and the specified instance members.\n            /// </summary>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.define_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:staticMembers\">\n            /// The set of static fields, properties, and methods made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.define_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            _BaseCoreUtils.markSupportedForProcessing(constructor);\n            if (instanceMembers) {\n                initializeProperties(constructor.prototype, instanceMembers);\n            }\n            if (staticMembers) {\n                initializeProperties(constructor, staticMembers);\n            }\n            return constructor;\n        }\n\n        function derive(baseClass, constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.derive\">\n            /// <summary locid=\"WinJS.Class.derive\">\n            /// Creates a sub-class based on the supplied baseClass parameter, using prototypal inheritance.\n            /// </summary>\n            /// <param name=\"baseClass\" type=\"Function\" locid=\"WinJS.Class.derive_p:baseClass\">\n            /// The class to inherit from.\n            /// </param>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.derive_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:staticMembers\">\n            /// The set of static fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.derive_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            if (baseClass) {\n                constructor = constructor || function () { };\n                var basePrototype = baseClass.prototype;\n                constructor.prototype = Object.create(basePrototype);\n                _BaseCoreUtils.markSupportedForProcessing(constructor);\n                Object.defineProperty(constructor.prototype, \"constructor\", { value: constructor, writable: true, configurable: true, enumerable: true });\n                if (instanceMembers) {\n                    initializeProperties(constructor.prototype, instanceMembers);\n                }\n                if (staticMembers) {\n                    initializeProperties(constructor, staticMembers);\n                }\n                return constructor;\n            } else {\n                return define(constructor, instanceMembers, staticMembers);\n            }\n        }\n\n        function mix(constructor) {\n            /// <signature helpKeyword=\"WinJS.Class.mix\">\n            /// <summary locid=\"WinJS.Class.mix\">\n            /// Defines a class using the given constructor and the union of the set of instance members\n            /// specified by all the mixin objects. The mixin parameter list is of variable length.\n            /// </summary>\n            /// <param name=\"constructor\" locid=\"WinJS.Class.mix_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.mix_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            var i, len;\n            for (i = 1, len = arguments.length; i < len; i++) {\n                initializeProperties(constructor.prototype, arguments[i]);\n            }\n            return constructor;\n        }\n\n        // Establish members of \"WinJS.Class\" namespace\n        _WinJS.Namespace.define(\"WinJS.Class\", {\n            define: define,\n            derive: derive,\n            mix: mix\n        });\n\n    })();\n\n    return {\n        Namespace: _WinJS.Namespace,\n        Class: _WinJS.Class\n    };\n\n});\n_winjs(\"WinJS/Core/_ErrorFromName\", [\"WinJS/Core/_Base\"], function errorsInit(_Base) {\n    \"use strict\";\n\n    var ErrorFromName = _Base.Class.derive(Error, function (name, message) {\n        /// <signature helpKeyword=\"WinJS.ErrorFromName\">\n        /// <summary locid=\"WinJS.ErrorFromName\">\n        /// Creates an Error object with the specified name and message properties.\n        /// </summary>\n        /// <param name=\"name\" type=\"String\" locid=\"WinJS.ErrorFromName_p:name\">The name of this error. The name is meant to be consumed programmatically and should not be localized.</param>\n        /// <param name=\"message\" type=\"String\" optional=\"true\" locid=\"WinJS.ErrorFromName_p:message\">The message for this error. The message is meant to be consumed by humans and should be localized.</param>\n        /// <returns type=\"Error\" locid=\"WinJS.ErrorFromName_returnValue\">Error instance with .name and .message properties populated</returns>\n        /// </signature>\n        this.name = name;\n        this.message = message || name;\n    }, {\n        /* empty */\n    }, {\n        supportedForProcessing: false,\n    });\n\n    _Base.Namespace.define(\"WinJS\", {\n        // ErrorFromName establishes a simple pattern for returning error codes.\n        //\n        ErrorFromName: ErrorFromName\n    });\n\n    return ErrorFromName;\n\n});\n\n\n_winjs(\"WinJS/Core/_Events\", [\"exports\",\"WinJS/Core/_Base\"], function eventsInit(exports, _Base) {\n    \"use strict\";\n\n\n    function createEventProperty(name) {\n        var eventPropStateName = \"_on\" + name + \"state\";\n\n        return {\n            get: function () {\n                var state = this[eventPropStateName];\n                return state && state.userHandler;\n            },\n            set: function (handler) {\n                var state = this[eventPropStateName];\n                if (handler) {\n                    if (!state) {\n                        state = { wrapper: function (evt) { return state.userHandler(evt); }, userHandler: handler };\n                        Object.defineProperty(this, eventPropStateName, { value: state, enumerable: false, writable:true, configurable: true });\n                        this.addEventListener(name, state.wrapper, false);\n                    }\n                    state.userHandler = handler;\n                } else if (state) {\n                    this.removeEventListener(name, state.wrapper, false);\n                    this[eventPropStateName] = null;\n                }\n            },\n            enumerable: true\n        };\n    }\n\n    function createEventProperties() {\n        /// <signature helpKeyword=\"WinJS.Utilities.createEventProperties\">\n        /// <summary locid=\"WinJS.Utilities.createEventProperties\">\n        /// Creates an object that has one property for each name passed to the function.\n        /// </summary>\n        /// <param name=\"events\" locid=\"WinJS.Utilities.createEventProperties_p:events\">\n        /// A variable list of property names.\n        /// </param>\n        /// <returns type=\"Object\" locid=\"WinJS.Utilities.createEventProperties_returnValue\">\n        /// The object with the specified properties. The names of the properties are prefixed with 'on'.\n        /// </returns>\n        /// </signature>\n        var props = {};\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            var name = arguments[i];\n            props[\"on\" + name] = createEventProperty(name);\n        }\n        return props;\n    }\n\n    var EventMixinEvent = _Base.Class.define(\n        function EventMixinEvent_ctor(type, detail, target) {\n            this.detail = detail;\n            this.target = target;\n            this.timeStamp = Date.now();\n            this.type = type;\n        },\n        {\n            bubbles: { value: false, writable: false },\n            cancelable: { value: false, writable: false },\n            currentTarget: {\n                get: function () { return this.target; }\n            },\n            defaultPrevented: {\n                get: function () { return this._preventDefaultCalled; }\n            },\n            trusted: { value: false, writable: false },\n            eventPhase: { value: 0, writable: false },\n            target: null,\n            timeStamp: null,\n            type: null,\n\n            preventDefault: function () {\n                this._preventDefaultCalled = true;\n            },\n            stopImmediatePropagation: function () {\n                this._stopImmediatePropagationCalled = true;\n            },\n            stopPropagation: function () {\n            }\n        }, {\n            supportedForProcessing: false,\n        }\n    );\n\n    var eventMixin = {\n        _listeners: null,\n\n        addEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// Adds an event listener to the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:listener\">\n            /// The listener to invoke when the event is raised.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:useCapture\">\n            /// if true initiates capture, otherwise false.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            this._listeners = this._listeners || {};\n            var eventListeners = (this._listeners[type] = this._listeners[type] || []);\n            for (var i = 0, len = eventListeners.length; i < len; i++) {\n                var l = eventListeners[i];\n                if (l.useCapture === useCapture && l.listener === listener) {\n                    return;\n                }\n            }\n            eventListeners.push({ listener: listener, useCapture: useCapture });\n        },\n        dispatchEvent: function (type, details) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// Raises an event of the specified type and with the specified additional properties.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"details\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:details\">\n            /// The set of additional properties to be attached to the event object when the event is raised.\n            /// </param>\n            /// <returns type=\"Boolean\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_returnValue\">\n            /// true if preventDefault was called on the event.\n            /// </returns>\n            /// </signature>\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                var eventValue = new EventMixinEvent(type, details, this);\n                // Need to copy the array to protect against people unregistering while we are dispatching\n                listeners = listeners.slice(0, listeners.length);\n                for (var i = 0, len = listeners.length; i < len && !eventValue._stopImmediatePropagationCalled; i++) {\n                    listeners[i].listener(eventValue);\n                }\n                return eventValue.defaultPrevented || false;\n            }\n            return false;\n        },\n        removeEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// Removes an event listener from the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:listener\">\n            /// The listener to remove.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:useCapture\">\n            /// Specifies whether to initiate capture.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                for (var i = 0, len = listeners.length; i < len; i++) {\n                    var l = listeners[i];\n                    if (l.listener === listener && l.useCapture === useCapture) {\n                        listeners.splice(i, 1);\n                        if (listeners.length === 0) {\n                            delete this._listeners[type];\n                        }\n                        // Only want to remove one element for each call to removeEventListener\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    _Base.Namespace._moduleDefine(exports, \"WinJS.Utilities\", {\n        _createEventProperty: createEventProperty,\n        createEventProperties: createEventProperties,\n        eventMixin: eventMixin\n    });\n\n});\n\n\n_winjs(\"WinJS/Core/_Trace\", [\"WinJS/Core/_Global\"], function traceInit(_Global) {\n    \"use strict\";\n\n    function nop(v) {\n        return v;\n    }\n\n    return {\n        _traceAsyncOperationStarting: (_Global.Debug && _Global.Debug.msTraceAsyncOperationStarting && _Global.Debug.msTraceAsyncOperationStarting.bind(_Global.Debug)) || nop,\n        _traceAsyncOperationCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncOperationCompleted && _Global.Debug.msTraceAsyncOperationCompleted.bind(_Global.Debug)) || nop,\n        _traceAsyncCallbackStarting: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackStarting && _Global.Debug.msTraceAsyncCallbackStarting.bind(_Global.Debug)) || nop,\n        _traceAsyncCallbackCompleted: (_Global.Debug && _Global.Debug.msTraceAsyncCallbackCompleted && _Global.Debug.msTraceAsyncCallbackCompleted.bind(_Global.Debug)) || nop\n    };\n});\n_winjs(\"WinJS/Promise/_StateMachine\", [\"WinJS/Core/_Global\",\"WinJS/Core/_BaseCoreUtils\",\"WinJS/Core/_Base\",\"WinJS/Core/_ErrorFromName\",\"WinJS/Core/_Events\",\"WinJS/Core/_Trace\"], function promiseStateMachineInit(_Global, _BaseCoreUtils, _Base, _ErrorFromName, _Events, _Trace) {\n    \"use strict\";\n\n    _Global.Debug && (_Global.Debug.setNonUserCodeExceptions = true);\n\n    var ListenerType = _Base.Class.mix(_Base.Class.define(null, { /*empty*/ }, { supportedForProcessing: false }), _Events.eventMixin);\n    var promiseEventListeners = new ListenerType();\n    // make sure there is a listeners collection so that we can do a more trivial check below\n    promiseEventListeners._listeners = {};\n    var errorET = \"error\";\n    var canceledName = \"Canceled\";\n    var tagWithStack = false;\n    var tag = {\n        promise: 0x01,\n        thenPromise: 0x02,\n        errorPromise: 0x04,\n        exceptionPromise: 0x08,\n        completePromise: 0x10,\n    };\n    tag.all = tag.promise | tag.thenPromise | tag.errorPromise | tag.exceptionPromise | tag.completePromise;\n\n    //\n    // Global error counter, for each error which enters the system we increment this once and then\n    // the error number travels with the error as it traverses the tree of potential handlers.\n    //\n    // When someone has registered to be told about errors (WinJS.Promise.callonerror) promises\n    // which are in error will get tagged with a ._errorId field. This tagged field is the\n    // contract by which nested promises with errors will be identified as chaining for the\n    // purposes of the callonerror semantics. If a nested promise in error is encountered without\n    // a ._errorId it will be assumed to be foreign and treated as an interop boundary and\n    // a new error id will be minted.\n    //\n    var error_number = 1;\n\n    //\n    // The state machine has a interesting hiccup in it with regards to notification, in order\n    // to flatten out notification and avoid recursion for synchronous completion we have an\n    // explicit set of *_notify states which are responsible for notifying their entire tree\n    // of children. They can do this because they know that immediate children are always\n    // ThenPromise instances and we can therefore reach into their state to access the\n    // _listeners collection.\n    //\n    // So, what happens is that a Promise will be fulfilled through the _completed or _error\n    // messages at which point it will enter a *_notify state and be responsible for to move\n    // its children into an (as appropriate) success or error state and also notify that child's\n    // listeners of the state transition, until leaf notes are reached.\n    //\n\n    var state_created,              // -> working\n        state_working,              // -> error | error_notify | success | success_notify | canceled | waiting\n        state_waiting,              // -> error | error_notify | success | success_notify | waiting_canceled\n        state_waiting_canceled,     // -> error | error_notify | success | success_notify | canceling\n        state_canceled,             // -> error | error_notify | success | success_notify | canceling\n        state_canceling,            // -> error_notify\n        state_success_notify,       // -> success\n        state_success,              // -> .\n        state_error_notify,         // -> error\n        state_error;                // -> .\n\n    // Noop function, used in the various states to indicate that they don't support a given\n    // message. Named with the somewhat cute name '_' because it reads really well in the states.\n\n    function _() { }\n\n    // Initial state\n    //\n    state_created = {\n        name: \"created\",\n        enter: function (promise) {\n            promise._setState(state_working);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Ready state, waiting for a message (completed/error/progress), able to be canceled\n    //\n    state_working = {\n        name: \"working\",\n        enter: _,\n        cancel: function (promise) {\n            promise._setState(state_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting state, if a promise is completed with a value which is itself a promise\n    // (has a then() method) it signs up to be informed when that child promise is\n    // fulfilled at which point it will be fulfilled with that value.\n    //\n    state_waiting = {\n        name: \"waiting\",\n        enter: function (promise) {\n            var waitedUpon = promise._value;\n            // We can special case our own intermediate promises which are not in a\n            //  terminal state by just pushing this promise as a listener without\n            //  having to create new indirection functions\n            if (waitedUpon instanceof ThenPromise &&\n                waitedUpon._state !== state_error &&\n                waitedUpon._state !== state_success) {\n                pushListener(waitedUpon, { promise: promise });\n            } else {\n                var error = function (value) {\n                    if (waitedUpon._errorId) {\n                        promise._chainedError(value, waitedUpon);\n                    } else {\n                        // Because this is an interop boundary we want to indicate that this\n                        //  error has been handled by the promise infrastructure before we\n                        //  begin a new handling chain.\n                        //\n                        callonerror(promise, value, detailsForHandledError, waitedUpon, error);\n                        promise._error(value);\n                    }\n                };\n                error.handlesOnError = true;\n                waitedUpon.then(\n                    promise._completed.bind(promise),\n                    error,\n                    promise._progress.bind(promise)\n                );\n            }\n        },\n        cancel: function (promise) {\n            promise._setState(state_waiting_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting canceled state, when a promise has been in a waiting state and receives a\n    // request to cancel its pending work it will forward that request to the child promise\n    // and then waits to be informed of the result. This promise moves itself into the\n    // canceling state but understands that the child promise may instead push it to a\n    // different state.\n    //\n    state_waiting_canceled = {\n        name: \"waiting_canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. Triggering a cancel on the promise\n            // that we are waiting upon may result in a different state transition\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            var waitedUpon = promise._value;\n            if (waitedUpon.cancel) {\n                waitedUpon.cancel();\n            }\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceled state, moves to the canceling state and then tells the promise to do\n    // whatever it might need to do on cancelation.\n    //\n    state_canceled = {\n        name: \"canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. The _cancelAction may change the state\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            promise._cancelAction();\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceling state, commits to the promise moving to an error state with an error\n    // object whose 'name' and 'message' properties contain the string \"Canceled\"\n    //\n    state_canceling = {\n        name: \"canceling\",\n        enter: function (promise) {\n            var error = new Error(canceledName);\n            error.name = error.message;\n            promise._value = error;\n            promise._setState(state_error_notify);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success notify state, moves a promise to the success state and notifies all children\n    //\n    state_success_notify = {\n        name: \"complete_notify\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.shift();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_success);\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success state, moves a promise to the success state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_success = {\n        name: \"success\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error notify state, moves a promise to the error state and notifies all children\n    //\n    state_error_notify = {\n        name: \"error_notify\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.shift();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_error);\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error state, moves a promise to the error state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_error = {\n        name: \"error\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    //\n    // The statemachine implementation follows a very particular pattern, the states are specified\n    // as static stateless bags of functions which are then indirected through the state machine\n    // instance (a Promise). As such all of the functions on each state have the promise instance\n    // passed to them explicitly as a parameter and the Promise instance members do a little\n    // dance where they indirect through the state and insert themselves in the argument list.\n    //\n    // We could instead call directly through the promise states however then every caller\n    // would have to remember to do things like pumping the state machine to catch state transitions.\n    //\n\n    var PromiseStateMachine = _Base.Class.define(null, {\n        _listeners: null,\n        _nextState: null,\n        _state: null,\n        _value: null,\n\n        cancel: function () {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n            /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n            /// already been fulfilled and cancellation is supported, the promise enters\n            /// the error state with a value of Error(\"Canceled\").\n            /// </summary>\n            /// </signature>\n            this._state.cancel(this);\n            this._run();\n        },\n        done: function Promise_done(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            ///\n            /// After the handlers have finished executing, this function throws any error that would have been returned\n            /// from then() as a promise in the error state.\n            /// </summary>\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The fulfilled value is passed as the single argument. If the value is null,\n            /// the fulfilled value is returned. The value returned\n            /// from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while executing the function, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function is the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n            /// the function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// </signature>\n            this._state.done(this, onComplete, onError, onProgress);\n        },\n        then: function Promise_then(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            /// </summary>\n            /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The value is passed as the single argument. If the value is null, the value is returned.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while this function is being executed, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n            /// The function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n            /// The promise whose value is the result of executing the complete or\n            /// error function.\n            /// </returns>\n            /// </signature>\n            // BEGIN monaco change\n            if (this.then !== Promise_then) {\n                this.then(onComplete, onError, onProgress);\n                return;\n            }\n            // END monaco change\n            return this._state.then(this, onComplete, onError, onProgress);\n        },\n\n        _chainedError: function (value, context) {\n            var result = this._state._error(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _completed: function (value) {\n            var result = this._state._completed(this, value);\n            this._run();\n            return result;\n        },\n        _error: function (value) {\n            var result = this._state._error(this, value, detailsForError);\n            this._run();\n            return result;\n        },\n        _progress: function (value) {\n            this._state._progress(this, value);\n        },\n        _setState: function (state) {\n            this._nextState = state;\n        },\n        _setCompleteValue: function (value) {\n            this._state._setCompleteValue(this, value);\n            this._run();\n        },\n        _setChainedErrorValue: function (value, context) {\n            var result = this._state._setErrorValue(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _setExceptionValue: function (value) {\n            var result = this._state._setErrorValue(this, value, detailsForException);\n            this._run();\n            return result;\n        },\n        _run: function () {\n            while (this._nextState) {\n                this._state = this._nextState;\n                this._nextState = null;\n                this._state.enter(this);\n            }\n        }\n    }, {\n        supportedForProcessing: false\n    });\n\n    //\n    // Implementations of shared state machine code.\n    //\n\n    function completed(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success_notify;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function createErrorDetails(exception, error, promise, id, parent, handler) {\n        return {\n            exception: exception,\n            error: error,\n            promise: promise,\n            handler: handler,\n            id: id,\n            parent: parent\n        };\n    }\n    function detailsForHandledError(promise, errorValue, context, handler) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context,\n            handler\n        );\n    }\n    function detailsForChainedError(promise, errorValue, context) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        setErrorInfo(promise, errorId, exception);\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context\n        );\n    }\n    function detailsForError(promise, errorValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId);\n        return createErrorDetails(\n            null,\n            errorValue,\n            promise,\n            errorId\n        );\n    }\n    function detailsForException(promise, exceptionValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId, true);\n        return createErrorDetails(\n            exceptionValue,\n            null,\n            promise,\n            errorId\n        );\n    }\n    function done(promise, onComplete, onError, onProgress) {\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.done\");\n        pushListener(promise, { c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\n    }\n    function error(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error_notify);\n    }\n    function notifySuccess(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onComplete = listener.c;\n            var target = listener.promise;\n\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, _Global.Debug && _Global.Debug.MS_ASYNC_OP_STATUS_SUCCESS);\n\n            if (target) {\n                _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\n                try {\n                    target._setCompleteValue(onComplete ? onComplete(value) : value);\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                } finally {\n                    _Trace._traceAsyncCallbackCompleted();\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                CompletePromise.prototype.done.call(promise, onComplete);\n            }\n        }\n    }\n    function notifyError(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onError = listener.e;\n            var target = listener.promise;\n\n            var errorID = _Global.Debug && (value && value.name === canceledName ? _Global.Debug.MS_ASYNC_OP_STATUS_CANCELED : _Global.Debug.MS_ASYNC_OP_STATUS_ERROR);\n            _Trace._traceAsyncOperationCompleted(listener.asyncOpID, errorID);\n\n            if (target) {\n                var asyncCallbackStarted = false;\n                try {\n                    if (onError) {\n                        _Trace._traceAsyncCallbackStarting(listener.asyncOpID);\n                        asyncCallbackStarted = true;\n                        if (!onError.handlesOnError) {\n                            callonerror(target, value, detailsForHandledError, promise, onError);\n                        }\n                        target._setCompleteValue(onError(value));\n                    } else {\n                        target._setChainedErrorValue(value, promise);\n                    }\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                } finally {\n                    if (asyncCallbackStarted) {\n                        _Trace._traceAsyncCallbackCompleted();\n                    }\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                ErrorPromise.prototype.done.call(promise, null, onError);\n            }\n        }\n    }\n    function callonerror(promise, value, onerrorDetailsGenerator, context, handler) {\n        if (promiseEventListeners._listeners[errorET]) {\n            if (value instanceof Error && value.message === canceledName) {\n                return;\n            }\n            promiseEventListeners.dispatchEvent(errorET, onerrorDetailsGenerator(promise, value, context, handler));\n        }\n    }\n    function progress(promise, value) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            var i, len;\n            for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n                var listener = len === 1 ? listeners : listeners[i];\n                var onProgress = listener.p;\n                if (onProgress) {\n                    try { onProgress(value); } catch (ex) { }\n                }\n                if (!(listener.c || listener.e) && listener.promise) {\n                    listener.promise._progress(value);\n                }\n            }\n        }\n    }\n    function pushListener(promise, listener) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            // We may have either a single listener (which will never be wrapped in an array)\n            // or 2+ listeners (which will be wrapped). Since we are now adding one more listener\n            // we may have to wrap the single listener before adding the second.\n            listeners = Array.isArray(listeners) ? listeners : [listeners];\n            listeners.push(listener);\n        } else {\n            listeners = listener;\n        }\n        promise._listeners = listeners;\n    }\n    // The difference beween setCompleteValue()/setErrorValue() and complete()/error() is that setXXXValue() moves\n    // a promise directly to the success/error state without starting another notification pass (because one\n    // is already ongoing).\n    function setErrorInfo(promise, errorId, isException) {\n        promise._isException = isException || false;\n        promise._errorId = errorId;\n    }\n    function setErrorValue(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error);\n    }\n    function setCompleteValue(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function then(promise, onComplete, onError, onProgress) {\n        var result = new ThenPromise(promise);\n        var asyncOpID = _Trace._traceAsyncOperationStarting(\"WinJS.Promise.then\");\n        pushListener(promise, { promise: result, c: onComplete, e: onError, p: onProgress, asyncOpID: asyncOpID });\n        return result;\n    }\n\n    //\n    // Internal implementation detail promise, ThenPromise is created when a promise needs\n    // to be returned from a then() method.\n    //\n    var ThenPromise = _Base.Class.derive(PromiseStateMachine,\n        function (creator) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.thenPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._creator = creator;\n            this._setState(state_created);\n            this._run();\n        }, {\n            _creator: null,\n\n            _cancelAction: function () { if (this._creator) { this._creator.cancel(); } },\n            _cleanupAction: function () { this._creator = null; }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Slim promise implementations for already completed promises, these are created\n    // under the hood on synchronous completion paths as well as by WinJS.Promise.wrap\n    // and WinJS.Promise.wrapError.\n    //\n\n    var ErrorPromise = _Base.Class.define(\n        function ErrorPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.errorPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForError);\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function ErrorPromise_done(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                var value = this._value;\n                if (onError) {\n                    try {\n                        if (!onError.handlesOnError) {\n                            callonerror(null, value, detailsForHandledError, this, onError);\n                        }\n                        var result = onError(value);\n                        if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                            // If a promise is returned we need to wait on it.\n                            result.done();\n                        }\n                        return;\n                    } catch (ex) {\n                        value = ex;\n                    }\n                }\n                if (value instanceof Error && value.message === canceledName) {\n                    // suppress cancel\n                    return;\n                }\n                // force the exception to be thrown asyncronously to avoid any try/catch blocks\n                //\n                Promise._doneHandler(value);\n            },\n            then: function ErrorPromise_then(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n\n                // If the promise is already in a error state and no error handler is provided\n                // we optimize by simply returning the promise instead of creating a new one.\n                //\n                if (!onError) { return this; }\n                var result;\n                var value = this._value;\n                try {\n                    if (!onError.handlesOnError) {\n                        callonerror(null, value, detailsForHandledError, this, onError);\n                    }\n                    result = new CompletePromise(onError(value));\n                } catch (ex) {\n                    // If the value throw from the error handler is the same as the value\n                    // provided to the error handler then there is no need for a new promise.\n                    //\n                    if (ex === value) {\n                        result = this;\n                    } else {\n                        result = new ExceptionPromise(ex);\n                    }\n                }\n                return result;\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var ExceptionPromise = _Base.Class.derive(ErrorPromise,\n        function ExceptionPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.exceptionPromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForException);\n        }, {\n            /* empty */\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var CompletePromise = _Base.Class.define(\n        function CompletePromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.completePromise))) {\n                this._stack = Promise._getStack();\n            }\n\n            if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                var result = new ThenPromise(null);\n                result._setCompleteValue(value);\n                return result;\n            }\n            this._value = value;\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function CompletePromise_done(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                if (!onComplete) { return; }\n                try {\n                    var result = onComplete(this._value);\n                    if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                        result.done();\n                    }\n                } catch (ex) {\n                    // force the exception to be thrown asynchronously to avoid any try/catch blocks\n                    Promise._doneHandler(ex);\n                }\n            },\n            then: function CompletePromise_then(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n                try {\n                    // If the value returned from the completion handler is the same as the value\n                    // provided to the completion handler then there is no need for a new promise.\n                    //\n                    var newValue = onComplete ? onComplete(this._value) : this._value;\n                    return newValue === this._value ? this : new CompletePromise(newValue);\n                } catch (ex) {\n                    return new ExceptionPromise(ex);\n                }\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Promise is the user-creatable WinJS.Promise object.\n    //\n\n    function timeout(timeoutMS) {\n        var id;\n        return new Promise(\n            function (c) {\n                if (timeoutMS) {\n                    id = _Global.setTimeout(c, timeoutMS);\n                } else {\n                    _BaseCoreUtils._setImmediate(c);\n                }\n            },\n            function () {\n                if (id) {\n                    _Global.clearTimeout(id);\n                }\n            }\n        );\n    }\n\n    function timeoutWithPromise(timeout, promise) {\n        var cancelPromise = function () { promise.cancel(); };\n        var cancelTimeout = function () { timeout.cancel(); };\n        timeout.then(cancelPromise);\n        promise.then(cancelTimeout, cancelTimeout);\n        return promise;\n    }\n\n    var staticCanceledPromise;\n\n    var Promise = _Base.Class.derive(PromiseStateMachine,\n        function Promise_ctor(init, oncancel) {\n            /// <signature helpKeyword=\"WinJS.Promise\">\n            /// <summary locid=\"WinJS.Promise\">\n            /// A promise provides a mechanism to schedule work to be done on a value that\n            /// has not yet been computed. It is a convenient abstraction for managing\n            /// interactions with asynchronous APIs.\n            /// </summary>\n            /// <param name=\"init\" type=\"Function\" locid=\"WinJS.Promise_p:init\">\n            /// The function that is called during construction of the  promise. The function\n            /// is given three arguments (complete, error, progress). Inside this function\n            /// you should add event listeners for the notifications supported by this value.\n            /// </param>\n            /// <param name=\"oncancel\" optional=\"true\" locid=\"WinJS.Promise_p:oncancel\">\n            /// The function to call if a consumer of this promise wants\n            /// to cancel its undone work. Promises are not required to\n            /// support cancellation.\n            /// </param>\n            /// </signature>\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.promise))) {\n                this._stack = Promise._getStack();\n            }\n\n            this._oncancel = oncancel;\n            this._setState(state_created);\n            this._run();\n\n            try {\n                var complete = this._completed.bind(this);\n                var error = this._error.bind(this);\n                var progress = this._progress.bind(this);\n                init(complete, error, progress);\n            } catch (ex) {\n                this._setExceptionValue(ex);\n            }\n        }, {\n            _oncancel: null,\n\n            _cancelAction: function () {\n                // BEGIN monaco change\n                try {\n                    if (this._oncancel) {\n                        this._oncancel();\n                    } else {\n                        throw new Error('Promise did not implement oncancel');\n                    }\n                } catch (ex) {\n                    // Access fields to get them created\n                    var msg = ex.message;\n                    var stack = ex.stack;\n                    promiseEventListeners.dispatchEvent('error', ex);\n                }\n                // END monaco change\n            },\n            _cleanupAction: function () { this._oncancel = null; }\n        }, {\n\n            addEventListener: function Promise_addEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.addEventListener\">\n                /// <summary locid=\"WinJS.Promise.addEventListener\">\n                /// Adds an event listener to the control.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.addEventListener_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"listener\" locid=\"WinJS.Promise.addEventListener_p:listener\">\n                /// The listener to invoke when the event is raised.\n                /// </param>\n                /// <param name=\"capture\" locid=\"WinJS.Promise.addEventListener_p:capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.addEventListener(eventType, listener, capture);\n            },\n            any: function Promise_any(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.any\">\n                /// <summary locid=\"WinJS.Promise.any\">\n                /// Returns a promise that is fulfilled when one of the input promises\n                /// has been fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Array\" locid=\"WinJS.Promise.any_p:values\">\n                /// An array that contains promise objects or objects whose property\n                /// values include promise objects.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.any_returnValue\">\n                /// A promise that on fulfillment yields the value of the input (complete or error).\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error) {\n                        var keys = Object.keys(values);\n                        if (keys.length === 0) {\n                            complete();\n                        }\n                        var canceled = 0;\n                        keys.forEach(function (key) {\n                            Promise.as(values[key]).then(\n                                function () { complete({ key: key, value: values[key] }); },\n                                function (e) {\n                                    if (e instanceof Error && e.name === canceledName) {\n                                        if ((++canceled) === keys.length) {\n                                            complete(Promise.cancel);\n                                        }\n                                        return;\n                                    }\n                                    error({ key: key, value: values[key] });\n                                }\n                            );\n                        });\n                    },\n                    function () {\n                        var keys = Object.keys(values);\n                        keys.forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            as: function Promise_as(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.as\">\n                /// <summary locid=\"WinJS.Promise.as\">\n                /// Returns a promise. If the object is already a promise it is returned;\n                /// otherwise the object is wrapped in a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.as_p:value\">\n                /// The value to be treated as a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.as_returnValue\">\n                /// A promise.\n                /// </returns>\n                /// </signature>\n                if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                    return value;\n                }\n                return new CompletePromise(value);\n            },\n            /// <field type=\"WinJS.Promise\" helpKeyword=\"WinJS.Promise.cancel\" locid=\"WinJS.Promise.cancel\">\n            /// Canceled promise value, can be returned from a promise completion handler\n            /// to indicate cancelation of the promise chain.\n            /// </field>\n            cancel: {\n                get: function () {\n                    return (staticCanceledPromise = staticCanceledPromise || new ErrorPromise(new _ErrorFromName(canceledName)));\n                }\n            },\n            dispatchEvent: function Promise_dispatchEvent(eventType, details) {\n                /// <signature helpKeyword=\"WinJS.Promise.dispatchEvent\">\n                /// <summary locid=\"WinJS.Promise.dispatchEvent\">\n                /// Raises an event of the specified type and properties.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.dispatchEvent_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"details\" locid=\"WinJS.Promise.dispatchEvent_p:details\">\n                /// The set of additional properties to be attached to the event object.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.dispatchEvent_returnValue\">\n                /// Specifies whether preventDefault was called on the event.\n                /// </returns>\n                /// </signature>\n                return promiseEventListeners.dispatchEvent(eventType, details);\n            },\n            is: function Promise_is(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.is\">\n                /// <summary locid=\"WinJS.Promise.is\">\n                /// Determines whether a value fulfills the promise contract.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.is_p:value\">\n                /// A value that may be a promise.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.is_returnValue\">\n                /// true if the specified value is a promise, otherwise false.\n                /// </returns>\n                /// </signature>\n                return value && typeof value === \"object\" && typeof value.then === \"function\";\n            },\n            join: function Promise_join(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.join\">\n                /// <summary locid=\"WinJS.Promise.join\">\n                /// Creates a promise that is fulfilled when all the values are fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Object\" locid=\"WinJS.Promise.join_p:values\">\n                /// An object whose fields contain values, some of which may be promises.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.join_returnValue\">\n                /// A promise whose value is an object with the same field names as those of the object in the values parameter, where\n                /// each field value is the fulfilled value of a promise.\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error, progress) {\n                        var keys = Object.keys(values);\n                        var errors = Array.isArray(values) ? [] : {};\n                        var results = Array.isArray(values) ? [] : {};\n                        var undefineds = 0;\n                        var pending = keys.length;\n                        var argDone = function (key) {\n                            if ((--pending) === 0) {\n                                var errorCount = Object.keys(errors).length;\n                                if (errorCount === 0) {\n                                    complete(results);\n                                } else {\n                                    var canceledCount = 0;\n                                    keys.forEach(function (key) {\n                                        var e = errors[key];\n                                        if (e instanceof Error && e.name === canceledName) {\n                                            canceledCount++;\n                                        }\n                                    });\n                                    if (canceledCount === errorCount) {\n                                        complete(Promise.cancel);\n                                    } else {\n                                        error(errors);\n                                    }\n                                }\n                            } else {\n                                progress({ Key: key, Done: true });\n                            }\n                        };\n                        keys.forEach(function (key) {\n                            var value = values[key];\n                            if (value === undefined) {\n                                undefineds++;\n                            } else {\n                                Promise.then(value,\n                                    function (value) { results[key] = value; argDone(key); },\n                                    function (value) { errors[key] = value; argDone(key); }\n                                );\n                            }\n                        });\n                        pending -= undefineds;\n                        if (pending === 0) {\n                            complete(results);\n                            return;\n                        }\n                    },\n                    function () {\n                        Object.keys(values).forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            removeEventListener: function Promise_removeEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.removeEventListener\">\n                /// <summary locid=\"WinJS.Promise.removeEventListener\">\n                /// Removes an event listener from the control.\n                /// </summary>\n                /// <param name='eventType' locid=\"WinJS.Promise.removeEventListener_eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name='listener' locid=\"WinJS.Promise.removeEventListener_listener\">\n                /// The listener to remove.\n                /// </param>\n                /// <param name='capture' locid=\"WinJS.Promise.removeEventListener_capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.removeEventListener(eventType, listener, capture);\n            },\n            supportedForProcessing: false,\n            then: function Promise_then(value, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.then\">\n                /// <summary locid=\"WinJS.Promise.then\">\n                /// A static version of the promise instance method then().\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.then_p:value\">\n                /// the value to be treated as a promise.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.then_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If it is null, the promise simply\n                /// returns the value. The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.then_returnValue\">\n                /// A promise whose value is the result of executing the provided complete function.\n                /// </returns>\n                /// </signature>\n                return Promise.as(value).then(onComplete, onError, onProgress);\n            },\n            thenEach: function Promise_thenEach(values, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.thenEach\">\n                /// <summary locid=\"WinJS.Promise.thenEach\">\n                /// Performs an operation on all the input promises and returns a promise\n                /// that has the shape of the input and contains the result of the operation\n                /// that has been performed on each input.\n                /// </summary>\n                /// <param name=\"values\" locid=\"WinJS.Promise.thenEach_p:values\">\n                /// A set of values (which could be either an array or an object) of which some or all are promises.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.thenEach_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If the value is null, the promise returns the value.\n                /// The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.thenEach_returnValue\">\n                /// A promise that is the result of calling Promise.join on the values parameter.\n                /// </returns>\n                /// </signature>\n                var result = Array.isArray(values) ? [] : {};\n                Object.keys(values).forEach(function (key) {\n                    result[key] = Promise.as(values[key]).then(onComplete, onError, onProgress);\n                });\n                return Promise.join(result);\n            },\n            timeout: function Promise_timeout(time, promise) {\n                /// <signature helpKeyword=\"WinJS.Promise.timeout\">\n                /// <summary locid=\"WinJS.Promise.timeout\">\n                /// Creates a promise that is fulfilled after a timeout.\n                /// </summary>\n                /// <param name=\"timeout\" type=\"Number\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:timeout\">\n                /// The timeout period in milliseconds. If this value is zero or not specified\n                /// setImmediate is called, otherwise setTimeout is called.\n                /// </param>\n                /// <param name=\"promise\" type=\"Promise\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:promise\">\n                /// A promise that will be canceled if it doesn't complete before the\n                /// timeout has expired.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.timeout_returnValue\">\n                /// A promise that is completed asynchronously after the specified timeout.\n                /// </returns>\n                /// </signature>\n                var to = timeout(time);\n                return promise ? timeoutWithPromise(to, promise) : to;\n            },\n            wrap: function Promise_wrap(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrap\">\n                /// <summary locid=\"WinJS.Promise.wrap\">\n                /// Wraps a non-promise value in a promise. You can use this function if you need\n                /// to pass a value to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.wrap_p:value\">\n                /// Some non-promise value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrap_returnValue\">\n                /// A promise that is successfully fulfilled with the specified value\n                /// </returns>\n                /// </signature>\n                return new CompletePromise(value);\n            },\n            wrapError: function Promise_wrapError(error) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrapError\">\n                /// <summary locid=\"WinJS.Promise.wrapError\">\n                /// Wraps a non-promise error value in a promise. You can use this function if you need\n                /// to pass an error to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"error\" locid=\"WinJS.Promise.wrapError_p:error\">\n                /// A non-promise error value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrapError_returnValue\">\n                /// A promise that is in an error state with the specified value.\n                /// </returns>\n                /// </signature>\n                return new ErrorPromise(error);\n            },\n\n            _veryExpensiveTagWithStack: {\n                get: function () { return tagWithStack; },\n                set: function (value) { tagWithStack = value; }\n            },\n            _veryExpensiveTagWithStack_tag: tag,\n            _getStack: function () {\n                if (_Global.Debug && _Global.Debug.debuggerEnabled) {\n                    try { throw new Error(); } catch (e) { return e.stack; }\n                }\n            },\n\n            _cancelBlocker: function Promise__cancelBlocker(input, oncancel) {\n                //\n                // Returns a promise which on cancelation will still result in downstream cancelation while\n                //  protecting the promise 'input' from being  canceled which has the effect of allowing\n                //  'input' to be shared amoung various consumers.\n                //\n                if (!Promise.is(input)) {\n                    return Promise.wrap(input);\n                }\n                var complete;\n                var error;\n                var output = new Promise(\n                    function (c, e) {\n                        complete = c;\n                        error = e;\n                    },\n                    function () {\n                        complete = null;\n                        error = null;\n                        oncancel && oncancel();\n                    }\n                );\n                input.then(\n                    function (v) { complete && complete(v); },\n                    function (e) { error && error(e); }\n                );\n                return output;\n            },\n\n        }\n    );\n    Object.defineProperties(Promise, _Events.createEventProperties(errorET));\n\n    Promise._doneHandler = function (value) {\n        _BaseCoreUtils._setImmediate(function Promise_done_rethrow() {\n            throw value;\n        });\n    };\n\n    return {\n        PromiseStateMachine: PromiseStateMachine,\n        Promise: Promise,\n        state_created: state_created\n    };\n});\n\n_winjs(\"WinJS/Promise\", [\"WinJS/Core/_Base\",\"WinJS/Promise/_StateMachine\"], function promiseInit( _Base, _StateMachine) {\n    \"use strict\";\n\n    _Base.Namespace.define(\"WinJS\", {\n        Promise: _StateMachine.Promise\n    });\n\n    return _StateMachine.Promise;\n});\n\n__winjs_exports = _modules[\"WinJS/Core/_WinJS\"];\n__winjs_exports.TPromise = __winjs_exports.Promise;\n__winjs_exports.PPromise = __winjs_exports.Promise;\n\n// ESM-comment-begin\n// if (typeof exports === 'undefined' && typeof define === 'function' && define.amd) {\n//     define([], __winjs_exports);\n// } else {\n//     module.exports = __winjs_exports;\n// }\n// ESM-comment-end\n\n})();\n\n// ESM-uncomment-begin\nexport var Promise = __winjs_exports.Promise;\nexport var TPromise = __winjs_exports.TPromise;\nexport var PPromise = __winjs_exports.PPromise;\n// ESM-uncomment-end\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a;\nimport { isWindows } from './platform.js';\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\nvar _singleSlashStart = /^\\//;\nvar _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret) {\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nvar _empty = '';\nvar _slash = '/';\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component paths\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n *\n *\n */\nvar URI = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function URI(schemeOrData, authority, path, query, fragment) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = schemeOrData || _empty;\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this);\n        }\n    }\n    URI.isUri = function (thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string';\n    };\n    Object.defineProperty(URI.prototype, \"fsPath\", {\n        // ---- filesystem path -----------------------\n        /**\n         * Returns a string representing the corresponding file system path of this URI.\n         * Will handle UNC paths and normalize windows drive letters to lower-case. Also\n         * uses the platform specific path separator. Will *not* validate the path for\n         * invalid characters and semantics. Will *not* look at the scheme of this URI.\n         */\n        get: function () {\n            return _makeFsPath(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // ---- modify to new -------------------------\n    URI.prototype.with = function (change) {\n        if (!change) {\n            return this;\n        }\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n        if (scheme === void 0) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === void 0) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === void 0) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === void 0) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === void 0) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new _URI(scheme, authority, path, query, fragment);\n    };\n    // ---- parse & validate ------------------------\n    URI.parse = function (value) {\n        var match = _regexp.exec(value);\n        if (!match) {\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new _URI(match[2] || _empty, decodeURIComponent(match[4] || _empty), decodeURIComponent(match[5] || _empty), decodeURIComponent(match[7] || _empty), decodeURIComponent(match[9] || _empty));\n    };\n    URI.file = function (path) {\n        var authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            var idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new _URI('file', authority, path, _empty, _empty);\n    };\n    URI.from = function (components) {\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n    };\n    // ---- printing/externalize ---------------------------\n    /**\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        return _asFormatted(this, skipEncoding);\n    };\n    URI.prototype.toJSON = function () {\n        return this;\n    };\n    URI.revive = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            var result = new _URI(data);\n            result._fsPath = data.fsPath;\n            result._formatted = data.external;\n            return result;\n        }\n    };\n    return URI;\n}());\nexport default URI;\n// tslint:disable-next-line:class-name\nvar _URI = /** @class */ (function (_super) {\n    __extends(_URI, _super);\n    function _URI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._formatted = null;\n        _this._fsPath = null;\n        return _this;\n    }\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\n        get: function () {\n            if (!this._fsPath) {\n                this._fsPath = _makeFsPath(this);\n            }\n            return this._fsPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    };\n    _URI.prototype.toJSON = function () {\n        var res = {\n            $mid: 1\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    };\n    return _URI;\n}(URI));\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nvar encodeTable = (_a = {},\n    _a[58 /* Colon */] = '%3A',\n    _a[47 /* Slash */] = '%2F',\n    _a[63 /* QuestionMark */] = '%3F',\n    _a[35 /* Hash */] = '%23',\n    _a[91 /* OpenSquareBracket */] = '%5B',\n    _a[93 /* CloseSquareBracket */] = '%5D',\n    _a[64 /* AtSign */] = '%40',\n    _a[33 /* ExclamationMark */] = '%21',\n    _a[36 /* DollarSign */] = '%24',\n    _a[38 /* Ampersand */] = '%26',\n    _a[39 /* SingleQuote */] = '%27',\n    _a[40 /* OpenParen */] = '%28',\n    _a[41 /* CloseParen */] = '%29',\n    _a[42 /* Asterisk */] = '%2A',\n    _a[43 /* Plus */] = '%2B',\n    _a[44 /* Comma */] = '%2C',\n    _a[59 /* Semicolon */] = '%3B',\n    _a[61 /* Equals */] = '%3D',\n    _a[32 /* Space */] = '%20',\n    _a);\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    var res = undefined;\n    var nativeEncodePos = -1;\n    for (var pos = 0; pos < uriComponent.length; pos++) {\n        var code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            var escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    var res = undefined;\n    for (var pos = 0; pos < path.length; pos++) {\n        var code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n * @param uri\n */\nfunction _makeFsPath(uri) {\n    var value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = \"//\" + uri.authority + uri.path;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        // windows drive letter: file:///c:/far/boo\n        value = uri.path[1].toLowerCase() + uri.path.substr(2);\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    var encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    var res = '';\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        var idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            var userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            var code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = \"/\" + String.fromCharCode(code + 32) + \":\" + path.substr(3); // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            var code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = String.fromCharCode(code + 32) + \":\" + path.substr(2); // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * A position in the editor.\n */\nvar Position = /** @class */ (function () {\n    function Position(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Test if this position equals other position\n     */\n    Position.prototype.equals = function (other) {\n        return Position.equals(this, other);\n    };\n    /**\n     * Test if position `a` equals position `b`\n     */\n    Position.equals = function (a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.prototype.isBefore = function (other) {\n        return Position.isBefore(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.isBefore = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.prototype.isBeforeOrEqual = function (other) {\n        return Position.isBeforeOrEqual(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.isBeforeOrEqual = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    };\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    Position.compare = function (a, b) {\n        var aLineNumber = a.lineNumber | 0;\n        var bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            var aColumn = a.column | 0;\n            var bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    };\n    /**\n     * Clone this position.\n     */\n    Position.prototype.clone = function () {\n        return new Position(this.lineNumber, this.column);\n    };\n    /**\n     * Convert to a human-readable representation.\n     */\n    Position.prototype.toString = function () {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    };\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    Position.lift = function (pos) {\n        return new Position(pos.lineNumber, pos.column);\n    };\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    Position.isIPosition = function (obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    };\n    return Position;\n}());\nexport { Position };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nvar Range = /** @class */ (function () {\n    function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    Range.prototype.isEmpty = function () {\n        return Range.isEmpty(this);\n    };\n    /**\n     * Test if `range` is empty.\n     */\n    Range.isEmpty = function (range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    };\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    Range.prototype.containsPosition = function (position) {\n        return Range.containsPosition(this, position);\n    };\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    Range.containsPosition = function (range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    Range.prototype.containsRange = function (range) {\n        return Range.containsRange(this, range);\n    };\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    Range.containsRange = function (range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.prototype.plusRange = function (range) {\n        return Range.plusRange(this, range);\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.plusRange = function (a, b) {\n        var startLineNumber;\n        var startColumn;\n        var endLineNumber;\n        var endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.prototype.intersectRanges = function (range) {\n        return Range.intersectRanges(this, range);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.intersectRanges = function (a, b) {\n        var resultStartLineNumber = a.startLineNumber;\n        var resultStartColumn = a.startColumn;\n        var resultEndLineNumber = a.endLineNumber;\n        var resultEndColumn = a.endColumn;\n        var otherStartLineNumber = b.startLineNumber;\n        var otherStartColumn = b.startColumn;\n        var otherEndLineNumber = b.endLineNumber;\n        var otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    };\n    /**\n     * Test if this range equals other.\n     */\n    Range.prototype.equalsRange = function (other) {\n        return Range.equalsRange(this, other);\n    };\n    /**\n     * Test if range `a` equals `b`.\n     */\n    Range.equalsRange = function (a, b) {\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    };\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    Range.prototype.getEndPosition = function () {\n        return new Position(this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    Range.prototype.getStartPosition = function () {\n        return new Position(this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Transform to a user presentable string representation.\n     */\n    Range.prototype.toString = function () {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    };\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.prototype.collapseToStart = function () {\n        return Range.collapseToStart(this);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.collapseToStart = function (range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    };\n    // ---\n    Range.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    /**\n     * Create a `Range` from an `IRange`.\n     */\n    Range.lift = function (range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    };\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    Range.isIRange = function (obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    };\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    Range.areIntersectingOrTouching = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n     */\n    Range.areIntersecting = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    Range.compareRangesUsingStarts = function (a, b) {\n        var aStartLineNumber = a.startLineNumber | 0;\n        var bStartLineNumber = b.startLineNumber | 0;\n        if (aStartLineNumber === bStartLineNumber) {\n            var aStartColumn = a.startColumn | 0;\n            var bStartColumn = b.startColumn | 0;\n            if (aStartColumn === bStartColumn) {\n                var aEndLineNumber = a.endLineNumber | 0;\n                var bEndLineNumber = b.endLineNumber | 0;\n                if (aEndLineNumber === bEndLineNumber) {\n                    var aEndColumn = a.endColumn | 0;\n                    var bEndColumn = b.endColumn | 0;\n                    return aEndColumn - bEndColumn;\n                }\n                return aEndLineNumber - bEndLineNumber;\n            }\n            return aStartColumn - bStartColumn;\n        }\n        return aStartLineNumber - bStartLineNumber;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    Range.compareRangesUsingEnds = function (a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    };\n    /**\n     * Test if the range spans multiple lines.\n     */\n    Range.spansMultipleLines = function (range) {\n        return range.endLineNumber > range.startLineNumber;\n    };\n    return Range;\n}());\nexport { Range };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Represents information about a specific difference between two sequences.\n */\nvar DiffChange = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    function DiffChange(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    DiffChange.prototype.getOriginalEnd = function () {\n        return this.originalStart + this.originalLength;\n    };\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    DiffChange.prototype.getModifiedEnd = function () {\n        return this.modifiedStart + this.modifiedLength;\n    };\n    return DiffChange;\n}());\nexport { DiffChange };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { DiffChange } from './diffChange.js';\nfunction createStringSequence(a) {\n    return {\n        getLength: function () { return a.length; },\n        getElementAtIndex: function (pos) { return a.charCodeAt(pos); }\n    };\n}\nexport function stringDiff(original, modified, pretty) {\n    return new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff(pretty);\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nvar Debug = /** @class */ (function () {\n    function Debug() {\n    }\n    Debug.Assert = function (condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    };\n    return Debug;\n}());\nexport { Debug };\nvar MyArray = /** @class */ (function () {\n    function MyArray() {\n    }\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    MyArray.Copy = function (sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (var i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    };\n    return MyArray;\n}());\nexport { MyArray };\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nvar MaxDifferencesHistory = 1447;\n//let MaxDifferencesHistory = 100;\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nvar DiffChangeHelper = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    function DiffChangeHelper() {\n        this.m_changes = [];\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    DiffChangeHelper.prototype.MarkNextChange = function () {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n    };\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    DiffChangeHelper.prototype.AddOriginalElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    };\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    DiffChangeHelper.prototype.AddModifiedElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    };\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    DiffChangeHelper.prototype.getChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    };\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    DiffChangeHelper.prototype.getReverseChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    };\n    return DiffChangeHelper;\n}());\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nvar LcsDiff = /** @class */ (function () {\n    /**\n     * Constructs the DiffFinder\n     */\n    function LcsDiff(originalSequence, newSequence, continueProcessingPredicate) {\n        if (continueProcessingPredicate === void 0) { continueProcessingPredicate = null; }\n        this.OriginalSequence = originalSequence;\n        this.ModifiedSequence = newSequence;\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    LcsDiff.prototype.ElementsAreEqual = function (originalIndex, newIndex) {\n        return (this.OriginalSequence.getElementAtIndex(originalIndex) === this.ModifiedSequence.getElementAtIndex(newIndex));\n    };\n    LcsDiff.prototype.OriginalElementsAreEqual = function (index1, index2) {\n        return (this.OriginalSequence.getElementAtIndex(index1) === this.OriginalSequence.getElementAtIndex(index2));\n    };\n    LcsDiff.prototype.ModifiedElementsAreEqual = function (index1, index2) {\n        return (this.ModifiedSequence.getElementAtIndex(index1) === this.ModifiedSequence.getElementAtIndex(index2));\n    };\n    LcsDiff.prototype.ComputeDiff = function (pretty) {\n        return this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1, pretty);\n    };\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype._ComputeDiff = function (originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        var quitEarlyArr = [false];\n        var changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            return this.ShiftChanges(changes);\n        }\n        return changes;\n    };\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype.ComputeDiffRecursive = function (originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            var changes = void 0;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        var midOriginalArr = [0], midModifiedArr = [0];\n        var result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        var midOriginal = midOriginalArr[0];\n        var midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            var leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            var rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We did't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    };\n    LcsDiff.prototype.WALKTRACE = function (diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        var forwardChanges = null, reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        var changeHelper = new DiffChangeHelper();\n        var diagonalMin = diagonalForwardStart;\n        var diagonalMax = diagonalForwardEnd;\n        var diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        var lastOriginalIndex = Number.MIN_VALUE;\n        var historyIndex = this.m_forwardHistory.length - 1;\n        var diagonal;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            var originalStartPoint = midOriginalArr[0] + 1;\n            var modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                var lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = Number.MAX_VALUE;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    };\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    LcsDiff.prototype.ComputeRecursionPoint = function (originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        var originalIndex, modifiedIndex;\n        var diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        var diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        var numDifferences;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        var maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        var numDiagonals = maxDifferences + 1;\n        var forwardPoints = new Array(numDiagonals);\n        var reversePoints = new Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        var diagonalForwardBase = (modifiedEnd - modifiedStart);\n        var diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        var diagonalForwardOffset = (originalStart - modifiedStart);\n        var diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        var delta = diagonalReverseBase - diagonalForwardBase;\n        var deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        var diagonal, tempOriginalIndex;\n        for (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            var furthestOriginalIndex = 0;\n            var furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            var matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quiting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= MaxDifferencesHistory) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                var temp = new Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    };\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    LcsDiff.prototype.ShiftChanges = function (changes) {\n        var mergedDiffs;\n        do {\n            mergedDiffs = false;\n            // Shift all the changes down first\n            for (var i = 0; i < changes.length; i++) {\n                var change = changes[i];\n                var originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this.OriginalSequence.getLength();\n                var modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this.ModifiedSequence.getLength();\n                var checkOriginal = change.originalLength > 0;\n                var checkModified = change.modifiedLength > 0;\n                while (change.originalStart + change.originalLength < originalStop &&\n                    change.modifiedStart + change.modifiedLength < modifiedStop &&\n                    (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n                    (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                    change.originalStart++;\n                    change.modifiedStart++;\n                }\n            }\n            // Build up the new list (we have to build a new list because we\n            // might have changes we can merge together now)\n            var result = new Array();\n            var mergedChangeArr = [null];\n            for (var i = 0; i < changes.length; i++) {\n                if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                    mergedDiffs = true;\n                    result.push(mergedChangeArr[0]);\n                    i++;\n                }\n                else {\n                    result.push(changes[i]);\n                }\n            }\n            changes = result;\n        } while (mergedDiffs);\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (var i = changes.length - 1; i >= 0; i--) {\n            var change = changes[i];\n            var originalStop = 0;\n            var modifiedStop = 0;\n            if (i > 0) {\n                var prevChange = changes[i - 1];\n                if (prevChange.originalLength > 0) {\n                    originalStop = prevChange.originalStart + prevChange.originalLength;\n                }\n                if (prevChange.modifiedLength > 0) {\n                    modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n                }\n            }\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            var bestDelta = 0;\n            var bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (var delta = 1;; delta++) {\n                var originalStart = change.originalStart - delta;\n                var modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                var score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n        }\n        return changes;\n    };\n    LcsDiff.prototype._OriginalIsBoundary = function (index) {\n        if (index <= 0 || index >= this.OriginalSequence.getLength() - 1) {\n            return true;\n        }\n        var element = this.OriginalSequence.getElementAtIndex(index);\n        return (typeof element === 'string' && /^\\s*$/.test(element));\n    };\n    LcsDiff.prototype._OriginalRegionIsBoundary = function (originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            var originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._ModifiedIsBoundary = function (index) {\n        if (index <= 0 || index >= this.ModifiedSequence.getLength() - 1) {\n            return true;\n        }\n        var element = this.ModifiedSequence.getElementAtIndex(index);\n        return (typeof element === 'string' && /^\\s*$/.test(element));\n    };\n    LcsDiff.prototype._ModifiedRegionIsBoundary = function (modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            var modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._boundaryScore = function (originalStart, originalLength, modifiedStart, modifiedLength) {\n        var originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        var modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    };\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    LcsDiff.prototype.ConcatenateChanges = function (left, right) {\n        var mergedChangeArr = [];\n        var result = null;\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    };\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    LcsDiff.prototype.ChangesOverlap = function (left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            var originalStart = left.originalStart;\n            var originalLength = left.originalLength;\n            var modifiedStart = left.modifiedStart;\n            var modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    };\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    LcsDiff.prototype.ClipDiagonalBound = function (diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        var diagonalsBelow = diagonalBaseIndex;\n        var diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        var diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            var lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            var upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    };\n    return LcsDiff;\n}());\nexport { LcsDiff };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * The empty string.\n */\nexport var empty = '';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n, l, char) {\n    if (char === void 0) { char = '0'; }\n    var str = '' + n;\n    var r = [str];\n    for (var i = str.length; i < l; i++) {\n        r.push(char);\n    }\n    return r.reverse().join('');\n}\nvar _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        var idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<|>|&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle) {\n    if (needle === void 0) { needle = ' '; }\n    var trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    var offset = 0, idx = -1;\n    while ((idx = haystack.indexOf(needle, offset)) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    var offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    if (haystack === needle) {\n        return true;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.indexOf(needle, diff) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\nexport function createRegExp(searchString, isRegex, options) {\n    if (options === void 0) { options = {}; }\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    var modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    var match = regexp.exec('');\n    return (match && regexp.lastIndex === 0);\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start, end) {\n    if (start === void 0) { start = 0; }\n    if (end === void 0) { end = str.length; }\n    for (var i = start; i < end; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex) {\n    if (startIndex === void 0) { startIndex = str.length - 1; }\n    for (var i = startIndex; i >= 0; i--) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareIgnoreCase(a, b) {\n    var len = Math.min(a.length, b.length);\n    for (var i = 0; i < len; i++) {\n        var codeA = a.charCodeAt(i);\n        var codeB = b.charCodeAt(i);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        if (isUpperAsciiLetter(codeA)) {\n            codeA += 32;\n        }\n        if (isUpperAsciiLetter(codeB)) {\n            codeB += 32;\n        }\n        var diff = codeA - codeB;\n        if (diff === 0) {\n            // equal -> ignoreCase\n            continue;\n        }\n        else if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n            //\n            return diff;\n        }\n        else {\n            return compare(a.toLowerCase(), b.toLowerCase());\n        }\n    }\n    if (a.length < b.length) {\n        return -1;\n    }\n    else if (a.length > b.length) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nfunction isAsciiLetter(code) {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\nexport function equalsIgnoreCase(a, b) {\n    var len1 = a ? a.length : 0;\n    var len2 = b ? b.length : 0;\n    if (len1 !== len2) {\n        return false;\n    }\n    return doEqualsIgnoreCase(a, b);\n}\nfunction doEqualsIgnoreCase(a, b, stopAt) {\n    if (stopAt === void 0) { stopAt = a.length; }\n    if (typeof a !== 'string' || typeof b !== 'string') {\n        return false;\n    }\n    for (var i = 0; i < stopAt; i++) {\n        var codeA = a.charCodeAt(i);\n        var codeB = b.charCodeAt(i);\n        if (codeA === codeB) {\n            continue;\n        }\n        // a-z A-Z\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n            var diff = Math.abs(codeA - codeB);\n            if (diff !== 0 && diff !== 32) {\n                return false;\n            }\n        }\n        // Any other charcode\n        else {\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    var candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    var aLastIndex = a.length - 1;\n    var bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tlet chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tlet nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nvar CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    return CONTAINS_RTL.test(str);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nvar CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\nexport function containsEmoji(str) {\n    return CONTAINS_EMOJI.test(str);\n}\nvar IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport function containsFullWidthCharacter(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 — 2EFF   CJK Radicals Supplement\n    //          2F00 — 2FDF   Kangxi Radicals\n    //          2FF0 — 2FFF   Ideographic Description Characters\n    //          3000 — 303F   CJK Symbols and Punctuation\n    //          3040 — 309F   Hiragana\n    //          30A0 — 30FF   Katakana\n    //          3100 — 312F   Bopomofo\n    //          3130 — 318F   Hangul Compatibility Jamo\n    //          3190 — 319F   Kanbun\n    //          31A0 — 31BF   Bopomofo Extended\n    //          31F0 — 31FF   Katakana Phonetic Extensions\n    //          3200 — 32FF   Enclosed CJK Letters and Months\n    //          3300 — 33FF   CJK Compatibility\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\n    //          4E00 — 9FFF   CJK Unified Ideographs\n    //          A000 — A48F   Yi Syllables\n    //          A490 — A4CF   Yi Radicals\n    //          AC00 — D7AF   Hangul Syllables\n    // [IGNORE] D800 — DB7F   High Surrogates\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 — DFFF   Low Surrogates\n    // [IGNORE] E000 — F8FF   Private Use Area\n    //          F900 — FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 — FE0F   Variation Selectors\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 — FE6F   Small Form Variants\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 — FFFF   Specials\n    charCode = +charCode; // @perf\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n// -- UTF-8 BOM\nexport var UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return (str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nexport function safeBtoa(str) {\n    return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\nexport function repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport * as strings from '../../../base/common/strings.js';\nvar MAXIMUM_RUN_TIME = 5000; // 5 seconds\nvar MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    var diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nvar LineMarkerSequence = /** @class */ (function () {\n    function LineMarkerSequence(lines) {\n        var startColumns = [];\n        var endColumns = [];\n        for (var i = 0, length_1 = lines.length; i < length_1; i++) {\n            startColumns[i] = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\n        }\n        this._lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    LineMarkerSequence.prototype.getLength = function () {\n        return this._lines.length;\n    };\n    LineMarkerSequence.prototype.getElementAtIndex = function (i) {\n        return this._lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n    };\n    LineMarkerSequence.prototype.getStartLineNumber = function (i) {\n        return i + 1;\n    };\n    LineMarkerSequence.prototype.getEndLineNumber = function (i) {\n        return i + 1;\n    };\n    LineMarkerSequence._getFirstNonBlankColumn = function (txt, defaultValue) {\n        var r = strings.firstNonWhitespaceIndex(txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 1;\n    };\n    LineMarkerSequence._getLastNonBlankColumn = function (txt, defaultValue) {\n        var r = strings.lastNonWhitespaceIndex(txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 2;\n    };\n    LineMarkerSequence.prototype.getCharSequence = function (shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        var charCodes = [];\n        var lineNumbers = [];\n        var columns = [];\n        var len = 0;\n        for (var index = startIndex; index <= endIndex; index++) {\n            var lineContent = this._lines[index];\n            var startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            var endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (var col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n        }\n        return new CharSequence(charCodes, lineNumbers, columns);\n    };\n    return LineMarkerSequence;\n}());\nvar CharSequence = /** @class */ (function () {\n    function CharSequence(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    CharSequence.prototype.getLength = function () {\n        return this._charCodes.length;\n    };\n    CharSequence.prototype.getElementAtIndex = function (i) {\n        return this._charCodes[i];\n    };\n    CharSequence.prototype.getStartLineNumber = function (i) {\n        return this._lineNumbers[i];\n    };\n    CharSequence.prototype.getStartColumn = function (i) {\n        return this._columns[i];\n    };\n    CharSequence.prototype.getEndLineNumber = function (i) {\n        return this._lineNumbers[i];\n    };\n    CharSequence.prototype.getEndColumn = function (i) {\n        return this._columns[i] + 1;\n    };\n    return CharSequence;\n}());\nvar CharChange = /** @class */ (function () {\n    function CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    CharChange.createFromDiffChange = function (diffChange, originalCharSequence, modifiedCharSequence) {\n        var originalStartLineNumber;\n        var originalStartColumn;\n        var originalEndLineNumber;\n        var originalEndColumn;\n        var modifiedStartLineNumber;\n        var modifiedStartColumn;\n        var modifiedEndLineNumber;\n        var modifiedEndColumn;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = 0;\n            originalStartColumn = 0;\n            originalEndLineNumber = 0;\n            originalEndColumn = 0;\n        }\n        else {\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = 0;\n            modifiedStartColumn = 0;\n            modifiedEndLineNumber = 0;\n            modifiedEndColumn = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    };\n    return CharChange;\n}());\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    var result = [rawChanges[0]];\n    var prevChange = result[0];\n    for (var i = 1, len = rawChanges.length; i < len; i++) {\n        var currChange = rawChanges[i];\n        var originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        var modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        var matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nvar LineChange = /** @class */ (function () {\n    function LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    LineChange.createFromDiffResult = function (shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueProcessingPredicate, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        var originalStartLineNumber;\n        var originalEndLineNumber;\n        var modifiedStartLineNumber;\n        var modifiedEndLineNumber;\n        var charChanges;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\n            var originalCharSequence = originalLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            var modifiedCharSequence = modifiedLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            var rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate, true);\n            if (shouldPostProcessCharChanges) {\n                rawChanges = postProcessCharChanges(rawChanges);\n            }\n            charChanges = [];\n            for (var i = 0, length_2 = rawChanges.length; i < length_2; i++) {\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    };\n    return LineChange;\n}());\nvar DiffComputer = /** @class */ (function () {\n    function DiffComputer(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.maximumRunTimeMs = MAXIMUM_RUN_TIME;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineMarkerSequence(originalLines);\n        this.modified = new LineMarkerSequence(modifiedLines);\n    }\n    DiffComputer.prototype.computeDiff = function () {\n        if (this.original.getLength() === 1 && this.original.getElementAtIndex(0).length === 0) {\n            // empty original => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: 1,\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: this.modified.getLength(),\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        if (this.modified.getLength() === 1 && this.modified.getElementAtIndex(0).length === 0) {\n            // empty modified => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: this.original.getLength(),\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: 1,\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        this.computationStartTime = (new Date()).getTime();\n        var rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldMakePrettyDiff);\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            var lineChanges = [];\n            for (var i = 0, length_3 = rawChanges.length; i < length_3; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return lineChanges;\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        var result = [];\n        var originalLineIndex = 0;\n        var modifiedLineIndex = 0;\n        for (var i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            var nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            var originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            var modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                var originalLine = this.originalLines[originalLineIndex];\n                var modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        var originalStartColumn = LineMarkerSequence._getFirstNonBlankColumn(originalLine, 1);\n                        var modifiedStartColumn = LineMarkerSequence._getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            var originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            var modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        var originalEndColumn = LineMarkerSequence._getLastNonBlankColumn(originalLine, 1);\n                        var modifiedEndColumn = LineMarkerSequence._getLastNonBlankColumn(modifiedLine, 1);\n                        var originalMaxColumn = originalLine.length + 1;\n                        var modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            var originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            var modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return result;\n    };\n    DiffComputer.prototype._pushTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        var charChanges;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n    };\n    DiffComputer.prototype._mergeTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        var len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        var prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        return false;\n    };\n    DiffComputer.prototype._continueProcessingPredicate = function () {\n        if (this.maximumRunTimeMs === 0) {\n            return true;\n        }\n        var now = (new Date()).getTime();\n        return now - this.computationStartTime < this.maximumRunTimeMs;\n    };\n    return DiffComputer;\n}());\nexport { DiffComputer };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Uint8Matrix = /** @class */ (function () {\n    function Uint8Matrix(rows, cols, defaultValue) {\n        var data = new Uint8Array(rows * cols);\n        for (var i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    Uint8Matrix.prototype.get = function (row, col) {\n        return this._data[row * this.cols + col];\n    };\n    Uint8Matrix.prototype.set = function (row, col, value) {\n        this._data[row * this.cols + col] = value;\n    };\n    return Uint8Matrix;\n}());\nexport { Uint8Matrix };\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* MAX_UINT_8 */) {\n        return 255 /* MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* MAX_UINT_32 */) {\n        return 4294967295 /* MAX_UINT_32 */;\n    }\n    return v | 0;\n}\nexport function toUint32Array(arr) {\n    var len = arr.length;\n    var r = new Uint32Array(len);\n    for (var i = 0; i < len; i++) {\n        r[i] = toUint32(arr[i]);\n    }\n    return r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { toUint32 } from '../core/uint.js';\nvar PrefixSumIndexOfResult = /** @class */ (function () {\n    function PrefixSumIndexOfResult(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n    }\n    return PrefixSumIndexOfResult;\n}());\nexport { PrefixSumIndexOfResult };\nvar PrefixSumComputer = /** @class */ (function () {\n    function PrefixSumComputer(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    PrefixSumComputer.prototype.getCount = function () {\n        return this.values.length;\n    };\n    PrefixSumComputer.prototype.insertValues = function (insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        var insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.changeValue = function (index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\n        startIndex = toUint32(startIndex);\n        cnt = toUint32(cnt);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        var maxCnt = oldValues.length - startIndex;\n        if (cnt >= maxCnt) {\n            cnt = maxCnt;\n        }\n        if (cnt === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - cnt);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.getTotalValue = function () {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getAccumulatedValue(this.values.length - 1);\n    };\n    PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getAccumulatedValue(index);\n    };\n    PrefixSumComputer.prototype._getAccumulatedValue = function (index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        var startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (var i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    };\n    PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalValue();\n        var low = 0;\n        var high = this.values.length - 1;\n        var mid;\n        var midStop;\n        var midStart;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (accumulatedValue < midStart) {\n                high = mid - 1;\n            }\n            else if (accumulatedValue >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n    };\n    return PrefixSumComputer;\n}());\nexport { PrefixSumComputer };\nvar PrefixSumComputerWithCache = /** @class */ (function () {\n    function PrefixSumComputerWithCache(values) {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n        this._actual = new PrefixSumComputer(values);\n        this._bustCache();\n    }\n    PrefixSumComputerWithCache.prototype._bustCache = function () {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n    };\n    PrefixSumComputerWithCache.prototype.insertValues = function (insertIndex, insertValues) {\n        if (this._actual.insertValues(insertIndex, insertValues)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.changeValue = function (index, value) {\n        if (this._actual.changeValue(index, value)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.removeValues = function (startIndex, cnt) {\n        if (this._actual.removeValues(startIndex, cnt)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.getTotalValue = function () {\n        return this._actual.getTotalValue();\n    };\n    PrefixSumComputerWithCache.prototype.getAccumulatedValue = function (index) {\n        return this._actual.getAccumulatedValue(index);\n    };\n    PrefixSumComputerWithCache.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        if (this._cache !== null) {\n            var cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\n            if (cacheIndex >= 0 && cacheIndex < this._cache.length) {\n                // Cache hit!\n                return this._cache[cacheIndex];\n            }\n        }\n        // Cache miss!\n        return this._actual.getIndexOf(accumulatedValue);\n    };\n    /**\n     * Gives a hint that a lot of requests are about to come in for these accumulated values.\n     */\n    PrefixSumComputerWithCache.prototype.warmUpCache = function (accumulatedValueStart, accumulatedValueEnd) {\n        var newCache = [];\n        for (var accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\n            newCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\n        }\n        this._cache = newCache;\n        this._cacheAccumulatedValueStart = accumulatedValueStart;\n    };\n    return PrefixSumComputerWithCache;\n}());\nexport { PrefixSumComputerWithCache };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\nimport { Position } from '../core/position.js';\nvar MirrorTextModel = /** @class */ (function () {\n    function MirrorTextModel(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n    }\n    MirrorTextModel.prototype.dispose = function () {\n        this._lines.length = 0;\n    };\n    MirrorTextModel.prototype.getText = function () {\n        return this._lines.join(this._eol);\n    };\n    MirrorTextModel.prototype.onEvents = function (e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        var changes = e.changes;\n        for (var i = 0, len = changes.length; i < len; i++) {\n            var change = changes[i];\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n    };\n    MirrorTextModel.prototype._ensureLineStarts = function () {\n        if (!this._lineStarts) {\n            var eolLength = this._eol.length;\n            var linesLength = this._lines.length;\n            var lineStartValues = new Uint32Array(linesLength);\n            for (var i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    };\n    /**\n     * All changes to a line's text go through this method\n     */\n    MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    };\n    MirrorTextModel.prototype._acceptDeleteRange = function (range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    };\n    MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        var newLengths = new Uint32Array(insertLines.length - 1);\n        for (var i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    };\n    return MirrorTextModel;\n}());\nexport { MirrorTextModel };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { toUint8 } from './uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nvar CharacterClassifier = /** @class */ (function () {\n    function CharacterClassifier(_defaultValue) {\n        var defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    CharacterClassifier._createAsciiMap = function (defaultValue) {\n        var asciiMap = new Uint8Array(256);\n        for (var i = 0; i < 256; i++) {\n            asciiMap[i] = defaultValue;\n        }\n        return asciiMap;\n    };\n    CharacterClassifier.prototype.set = function (charCode, _value) {\n        var value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    };\n    CharacterClassifier.prototype.get = function (charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    };\n    return CharacterClassifier;\n}());\nexport { CharacterClassifier };\nvar CharacterSet = /** @class */ (function () {\n    function CharacterSet() {\n        this._actual = new CharacterClassifier(0 /* False */);\n    }\n    CharacterSet.prototype.add = function (charCode) {\n        this._actual.set(charCode, 1 /* True */);\n    };\n    CharacterSet.prototype.has = function (charCode) {\n        return (this._actual.get(charCode) === 1 /* True */);\n    };\n    return CharacterSet;\n}());\nexport { CharacterSet };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nimport { Uint8Matrix } from '../core/uint.js';\nvar StateMachine = /** @class */ (function () {\n    function StateMachine(edges) {\n        var maxCharCode = 0;\n        var maxState = 0 /* Invalid */;\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _a = edges[i], from = _a[0], chCode = _a[1], to = _a[2];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        var states = new Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _b = edges[i], from = _b[0], chCode = _b[1], to = _b[2];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    StateMachine.prototype.nextState = function (currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    };\n    return StateMachine;\n}());\n// State machine for http:// or https:// or file://\nvar _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* Start */, 104 /* h */, 2 /* H */],\n            [1 /* Start */, 72 /* H */, 2 /* H */],\n            [1 /* Start */, 102 /* f */, 6 /* F */],\n            [1 /* Start */, 70 /* F */, 6 /* F */],\n            [2 /* H */, 116 /* t */, 3 /* HT */],\n            [2 /* H */, 84 /* T */, 3 /* HT */],\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\n            [6 /* F */, 105 /* i */, 7 /* FI */],\n            [6 /* F */, 73 /* I */, 7 /* FI */],\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\n        ]);\n    }\n    return _stateMachine;\n}\nvar _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier(0 /* None */);\n        var FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n        for (var i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\n        }\n        var CANNOT_END_WITH_CHARACTERS = '.,;';\n        for (var i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nvar LinkComputer = /** @class */ (function () {\n    function LinkComputer() {\n    }\n    LinkComputer._createLink = function (classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        var lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            var chCode = line.charCodeAt(lastIncludedCharIndex);\n            var chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            var charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            var lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    };\n    LinkComputer.computeLinks = function (model) {\n        var stateMachine = getStateMachine();\n        var classifier = getClassifier();\n        var result = [];\n        for (var i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            var line = model.getLineContent(i);\n            var len = line.length;\n            var j = 0;\n            var linkBeginIndex = 0;\n            var linkBeginChCode = 0;\n            var state = 1 /* Start */;\n            var hasOpenParens = false;\n            var hasOpenSquareBracket = false;\n            var hasOpenCurlyBracket = false;\n            while (j < len) {\n                var resetStateMachine = false;\n                var chCode = line.charCodeAt(j);\n                if (state === 13 /* Accept */) {\n                    var chClass = void 0;\n                    switch (chCode) {\n                        case 40 /* OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 41 /* CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 91 /* OpenSquareBracket */:\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 93 /* CloseSquareBracket */:\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 123 /* OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 125 /* CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n                        case 39 /* SingleQuote */:\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 34 /* DoubleQuote */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 96 /* BackTick */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* End */) {\n                    var chClass = classifier.get(chCode);\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    };\n    return LinkComputer;\n}());\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar BasicInplaceReplace = /** @class */ (function () {\n    function BasicInplaceReplace() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    BasicInplaceReplace.prototype.navigateValueSet = function (range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            var result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            var result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.doNavigateValueSet = function (text, up) {\n        var numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    };\n    BasicInplaceReplace.prototype.numberReplace = function (value, up) {\n        var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        var n1 = Number(value);\n        var n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.textReplace = function (value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    };\n    BasicInplaceReplace.prototype.valueSetsReplace = function (valueSets, value, up) {\n        var result = null;\n        for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    };\n    BasicInplaceReplace.prototype.valueSetReplace = function (valueSet, value, up) {\n        var idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    };\n    BasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n    return BasicInplaceReplace;\n}());\nexport { BasicInplaceReplace };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords) {\n    if (allowInWords === void 0) { allowInWords = ''; }\n    var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (var i = 0; i < USUAL_WORD_SEPARATORS.length; i++) {\n        if (allowInWords.indexOf(USUAL_WORD_SEPARATORS[i]) >= 0) {\n            continue;\n        }\n        source += '\\\\' + USUAL_WORD_SEPARATORS[i];\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport var DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    var result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            var flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nfunction getWordAtPosFast(column, wordDefinition, text, textOffset) {\n    // find whitespace enclosed text around column and match from there\n    var pos = column - 1 - textOffset;\n    var start = text.lastIndexOf(' ', pos - 1) + 1;\n    var end = text.indexOf(' ', pos);\n    if (end === -1) {\n        end = text.length;\n    }\n    wordDefinition.lastIndex = start;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        if (match.index <= pos && wordDefinition.lastIndex >= pos) {\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + match.index,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nfunction getWordAtPosSlow(column, wordDefinition, text, textOffset) {\n    // matches all words starting at the beginning\n    // of the input until it finds a match that encloses\n    // the desired column. slow but correct\n    var pos = column - 1 - textOffset;\n    wordDefinition.lastIndex = 0;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        if (match.index > pos) {\n            // |nW -> matched only after the pos\n            return null;\n        }\n        else if (wordDefinition.lastIndex >= pos) {\n            // W|W -> match encloses pos\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + match.index,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nexport function getWordAtText(column, wordDefinition, text, textOffset) {\n    // if `words` can contain whitespace character we have to use the slow variant\n    // otherwise we use the fast variant of finding a word\n    wordDefinition.lastIndex = 0;\n    var match = wordDefinition.exec(text);\n    if (!match) {\n        return null;\n    }\n    // todo@joh the `match` could already be the (first) word\n    var ret = match[0].indexOf(' ') >= 0\n        // did match a word which contains a space character -> use slow word find\n        ? getWordAtPosSlow(column, wordDefinition, text, textOffset)\n        // sane word definition -> use fast word find\n        : getWordAtPosFast(column, wordDefinition, text, textOffset);\n    // both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n    // in an undefined state and to not confuse other users of the wordDefinition\n    // we reset the lastIndex\n    wordDefinition.lastIndex = 0;\n    return ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { TPromise } from './winjs.base.js';\n// ------ BEGIN Hook up error listeners to winjs promises\nvar outstandingPromiseErrors = {};\nfunction promiseErrorHandler(e) {\n    //\n    // e.detail looks like: { exception, error, promise, handler, id, parent }\n    //\n    var details = e.detail;\n    var id = details.id;\n    // If the error has a parent promise then this is not the origination of the\n    //  error so we check if it has a handler, and if so we mark that the error\n    //  was handled by removing it from outstandingPromiseErrors\n    //\n    if (details.parent) {\n        if (details.handler && outstandingPromiseErrors) {\n            delete outstandingPromiseErrors[id];\n        }\n        return;\n    }\n    // Indicate that this error was originated and needs to be handled\n    outstandingPromiseErrors[id] = details;\n    // The first time the queue fills up this iteration, schedule a timeout to\n    // check if any errors are still unhandled.\n    if (Object.keys(outstandingPromiseErrors).length === 1) {\n        setTimeout(function () {\n            var errors = outstandingPromiseErrors;\n            outstandingPromiseErrors = {};\n            Object.keys(errors).forEach(function (errorId) {\n                var error = errors[errorId];\n                if (error.exception) {\n                    onUnexpectedError(error.exception);\n                }\n                else if (error.error) {\n                    onUnexpectedError(error.error);\n                }\n                console.log('WARNING: Promise with no error callback:' + error.id);\n                console.log(error);\n                if (error.exception) {\n                    console.log(error.exception.stack);\n                }\n            });\n        }, 0);\n    }\n}\nTPromise.addEventListener('error', promiseErrorHandler);\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(function () {\n                if (e.stack) {\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    ErrorHandler.prototype.emit = function (e) {\n        this.listeners.forEach(function (listener) {\n            listener(e);\n        });\n    };\n    ErrorHandler.prototype.onUnexpectedError = function (e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    };\n    // For external errors, we don't want the listeners to be called\n    ErrorHandler.prototype.onUnexpectedExternalError = function (e) {\n        this.unexpectedErrorHandler(e);\n    };\n    return ErrorHandler;\n}());\nexport { ErrorHandler };\nexport var errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        var name_1 = error.name, message = error.message;\n        var stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name: name_1,\n            message: message,\n            stack: stack\n        };\n    }\n    // return as is\n    return error;\n}\nvar canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error) {\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled() {\n    var error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(\"Illegal argument: \" + name);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(\"Illegal state: \" + name);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport function once(fn) {\n    var _this = this;\n    var didCall = false;\n    var result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        result = fn.apply(_this, arguments);\n        return result;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport function isDisposable(thing) {\n    return typeof thing.dispose === 'function'\n        && thing.dispose.length === 0;\n}\nexport function dispose(first) {\n    var rest = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        rest[_i - 1] = arguments[_i];\n    }\n    if (Array.isArray(first)) {\n        first.forEach(function (d) { return d && d.dispose(); });\n        return [];\n    }\n    else if (rest.length === 0) {\n        if (first) {\n            first.dispose();\n            return first;\n        }\n        return undefined;\n    }\n    else {\n        dispose(first);\n        dispose(rest);\n        return [];\n    }\n}\nexport function combinedDisposable(disposables) {\n    return { dispose: function () { return dispose(disposables); } };\n}\nexport function toDisposable(fn) {\n    return { dispose: function () { fn(); } };\n}\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        this._toDispose = [];\n    }\n    Object.defineProperty(Disposable.prototype, \"toDispose\", {\n        get: function () { return this._toDispose; },\n        enumerable: true,\n        configurable: true\n    });\n    Disposable.prototype.dispose = function () {\n        this._toDispose = dispose(this._toDispose);\n    };\n    Disposable.prototype._register = function (t) {\n        this._toDispose.push(t);\n        return t;\n    };\n    Disposable.None = Object.freeze({ dispose: function () { } });\n    return Disposable;\n}());\nexport { Disposable };\nvar ImmortalReference = /** @class */ (function () {\n    function ImmortalReference(object) {\n        this.object = object;\n    }\n    ImmortalReference.prototype.dispose = function () { };\n    return ImmortalReference;\n}());\nexport { ImmortalReference };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { onUnexpectedError } from './errors.js';\nimport { once as onceFn } from './functional.js';\nimport { combinedDisposable, Disposable, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nexport var Event;\n(function (Event) {\n    var _disposable = { dispose: function () { } };\n    Event.None = function () { return _disposable; };\n})(Event || (Event = {}));\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nvar Emitter = /** @class */ (function () {\n    function Emitter(_options) {\n        this._options = _options;\n    }\n    Object.defineProperty(Emitter.prototype, \"event\", {\n        /**\n         * For the public to allow to subscribe\n         * to events from this Emitter\n         */\n        get: function () {\n            var _this = this;\n            if (!this._event) {\n                this._event = function (listener, thisArgs, disposables) {\n                    if (!_this._listeners) {\n                        _this._listeners = new LinkedList();\n                    }\n                    var firstListener = _this._listeners.isEmpty();\n                    if (firstListener && _this._options && _this._options.onFirstListenerAdd) {\n                        _this._options.onFirstListenerAdd(_this);\n                    }\n                    var remove = _this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n                    if (firstListener && _this._options && _this._options.onFirstListenerDidAdd) {\n                        _this._options.onFirstListenerDidAdd(_this);\n                    }\n                    if (_this._options && _this._options.onListenerDidAdd) {\n                        _this._options.onListenerDidAdd(_this, listener, thisArgs);\n                    }\n                    var result;\n                    result = {\n                        dispose: function () {\n                            result.dispose = Emitter._noop;\n                            if (!_this._disposed) {\n                                remove();\n                                if (_this._options && _this._options.onLastListenerRemove && _this._listeners.isEmpty()) {\n                                    _this._options.onLastListenerRemove(_this);\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(disposables)) {\n                        disposables.push(result);\n                    }\n                    return result;\n                };\n            }\n            return this._event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    Emitter.prototype.fire = function (event) {\n        if (this._listeners) {\n            // put all [listener,event]-pairs into delivery queue\n            // then emit all event. an inner/nested event might be\n            // the driver of this\n            if (!this._deliveryQueue) {\n                this._deliveryQueue = [];\n            }\n            for (var iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n                this._deliveryQueue.push([e.value, event]);\n            }\n            while (this._deliveryQueue.length > 0) {\n                var _a = this._deliveryQueue.shift(), listener = _a[0], event_1 = _a[1];\n                try {\n                    if (typeof listener === 'function') {\n                        listener.call(undefined, event_1);\n                    }\n                    else {\n                        listener[0].call(listener[1], event_1);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }\n        }\n    };\n    Emitter.prototype.dispose = function () {\n        if (this._listeners) {\n            this._listeners = undefined;\n        }\n        if (this._deliveryQueue) {\n            this._deliveryQueue.length = 0;\n        }\n        this._disposed = true;\n    };\n    Emitter._noop = function () { };\n    return Emitter;\n}());\nexport { Emitter };\nvar EventMultiplexer = /** @class */ (function () {\n    function EventMultiplexer() {\n        var _this = this;\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = new Emitter({\n            onFirstListenerAdd: function () { return _this.onFirstListenerAdd(); },\n            onLastListenerRemove: function () { return _this.onLastListenerRemove(); }\n        });\n    }\n    Object.defineProperty(EventMultiplexer.prototype, \"event\", {\n        get: function () {\n            return this.emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EventMultiplexer.prototype.add = function (event) {\n        var _this = this;\n        var e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        var dispose = function () {\n            if (_this.hasListeners) {\n                _this.unhook(e);\n            }\n            var idx = _this.events.indexOf(e);\n            _this.events.splice(idx, 1);\n        };\n        return toDisposable(onceFn(dispose));\n    };\n    EventMultiplexer.prototype.onFirstListenerAdd = function () {\n        var _this = this;\n        this.hasListeners = true;\n        this.events.forEach(function (e) { return _this.hook(e); });\n    };\n    EventMultiplexer.prototype.onLastListenerRemove = function () {\n        var _this = this;\n        this.hasListeners = false;\n        this.events.forEach(function (e) { return _this.unhook(e); });\n    };\n    EventMultiplexer.prototype.hook = function (e) {\n        var _this = this;\n        e.listener = e.event(function (r) { return _this.emitter.fire(r); });\n    };\n    EventMultiplexer.prototype.unhook = function (e) {\n        e.listener.dispose();\n        e.listener = null;\n    };\n    EventMultiplexer.prototype.dispose = function () {\n        this.emitter.dispose();\n    };\n    return EventMultiplexer;\n}());\nexport { EventMultiplexer };\nexport function once(event) {\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        var result = event(function (e) {\n            result.dispose();\n            return listener.call(thisArgs, e);\n        }, null, disposables);\n        return result;\n    };\n}\nexport function anyEvent() {\n    var events = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        events[_i] = arguments[_i];\n    }\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        return combinedDisposable(events.map(function (event) { return event(function (e) { return listener.call(thisArgs, e); }, null, disposables); }));\n    };\n}\nexport function debounceEvent(event, merger, delay, leading) {\n    if (delay === void 0) { delay = 100; }\n    if (leading === void 0) { leading = false; }\n    var subscription;\n    var output = undefined;\n    var handle = undefined;\n    var numDebouncedCalls = 0;\n    var emitter = new Emitter({\n        onFirstListenerAdd: function () {\n            subscription = event(function (cur) {\n                numDebouncedCalls++;\n                output = merger(output, cur);\n                if (leading && !handle) {\n                    emitter.fire(output);\n                }\n                clearTimeout(handle);\n                handle = setTimeout(function () {\n                    var _output = output;\n                    output = undefined;\n                    handle = undefined;\n                    if (!leading || numDebouncedCalls > 1) {\n                        emitter.fire(_output);\n                    }\n                    numDebouncedCalls = 0;\n                }, delay);\n            });\n        },\n        onLastListenerRemove: function () {\n            subscription.dispose();\n        }\n    });\n    return emitter.event;\n}\n/**\n * The EventDelayer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nvar EventBufferer = /** @class */ (function () {\n    function EventBufferer() {\n        this.buffers = [];\n    }\n    EventBufferer.prototype.wrapEvent = function (event) {\n        var _this = this;\n        return function (listener, thisArgs, disposables) {\n            return event(function (i) {\n                var buffer = _this.buffers[_this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(function () { return listener.call(thisArgs, i); });\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, void 0, disposables);\n        };\n    };\n    EventBufferer.prototype.bufferEvents = function (fn) {\n        var buffer = [];\n        this.buffers.push(buffer);\n        fn();\n        this.buffers.pop();\n        buffer.forEach(function (flush) { return flush(); });\n    };\n    return EventBufferer;\n}());\nexport { EventBufferer };\nexport function mapEvent(event, map) {\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        return event(function (i) { return listener.call(thisArgs, map(i)); }, null, disposables);\n    };\n}\nexport function filterEvent(event, filter) {\n    return function (listener, thisArgs, disposables) {\n        if (thisArgs === void 0) { thisArgs = null; }\n        return event(function (e) { return filter(e) && listener.call(thisArgs, e); }, null, disposables);\n    };\n}\nvar ChainableEvent = /** @class */ (function () {\n    function ChainableEvent(_event) {\n        this._event = _event;\n    }\n    Object.defineProperty(ChainableEvent.prototype, \"event\", {\n        get: function () { return this._event; },\n        enumerable: true,\n        configurable: true\n    });\n    ChainableEvent.prototype.map = function (fn) {\n        return new ChainableEvent(mapEvent(this._event, fn));\n    };\n    ChainableEvent.prototype.filter = function (fn) {\n        return new ChainableEvent(filterEvent(this._event, fn));\n    };\n    ChainableEvent.prototype.on = function (listener, thisArgs, disposables) {\n        return this._event(listener, thisArgs, disposables);\n    };\n    return ChainableEvent;\n}());\nexport function chain(event) {\n    return new ChainableEvent(event);\n}\nvar Relay = /** @class */ (function () {\n    function Relay() {\n        this.emitter = new Emitter();\n        this.event = this.emitter.event;\n        this.disposable = Disposable.None;\n    }\n    Object.defineProperty(Relay.prototype, \"input\", {\n        set: function (event) {\n            this.disposable.dispose();\n            this.disposable = event(this.emitter.fire, this.emitter);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Relay.prototype.dispose = function () {\n        this.disposable.dispose();\n        this.emitter.dispose();\n    };\n    return Relay;\n}());\nexport { Relay };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Node = /** @class */ (function () {\n    function Node(element) {\n        this.element = element;\n    }\n    return Node;\n}());\nvar LinkedList = /** @class */ (function () {\n    function LinkedList() {\n    }\n    LinkedList.prototype.isEmpty = function () {\n        return !this._first;\n    };\n    LinkedList.prototype.unshift = function (element) {\n        return this.insert(element, false);\n    };\n    LinkedList.prototype.push = function (element) {\n        return this.insert(element, true);\n    };\n    LinkedList.prototype.insert = function (element, atTheEnd) {\n        var _this = this;\n        var newNode = new Node(element);\n        if (!this._first) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            var oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            var oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        return function () {\n            for (var candidate = _this._first; candidate instanceof Node; candidate = candidate.next) {\n                if (candidate !== newNode) {\n                    continue;\n                }\n                if (candidate.prev && candidate.next) {\n                    // middle\n                    var anchor = candidate.prev;\n                    anchor.next = candidate.next;\n                    candidate.next.prev = anchor;\n                }\n                else if (!candidate.prev && !candidate.next) {\n                    // only node\n                    _this._first = undefined;\n                    _this._last = undefined;\n                }\n                else if (!candidate.next) {\n                    // last\n                    _this._last = _this._last.prev;\n                    _this._last.next = undefined;\n                }\n                else if (!candidate.prev) {\n                    // first\n                    _this._first = _this._first.next;\n                    _this._first.prev = undefined;\n                }\n                // done\n                break;\n            }\n        };\n    };\n    LinkedList.prototype.iterator = function () {\n        var element = {\n            done: undefined,\n            value: undefined,\n        };\n        var node = this._first;\n        return {\n            next: function () {\n                if (!node) {\n                    element.done = true;\n                    element.value = undefined;\n                }\n                else {\n                    element.done = false;\n                    element.value = node.element;\n                    node = node.next;\n                }\n                return element;\n            }\n        };\n    };\n    return LinkedList;\n}());\nexport { LinkedList };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar KeyCodeStrMap = /** @class */ (function () {\n    function KeyCodeStrMap() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    KeyCodeStrMap.prototype.define = function (keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    };\n    KeyCodeStrMap.prototype.keyCodeToStr = function (keyCode) {\n        return this._keyCodeToStr[keyCode];\n    };\n    KeyCodeStrMap.prototype.strToKeyCode = function (str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n    };\n    return KeyCodeStrMap;\n}());\nvar uiMap = new KeyCodeStrMap();\nvar userSettingsUSMap = new KeyCodeStrMap();\nvar userSettingsGeneralMap = new KeyCodeStrMap();\n(function () {\n    function define(keyCode, uiLabel, usUserSettingsLabel, generalUserSettingsLabel) {\n        if (usUserSettingsLabel === void 0) { usUserSettingsLabel = uiLabel; }\n        if (generalUserSettingsLabel === void 0) { generalUserSettingsLabel = usUserSettingsLabel; }\n        uiMap.define(keyCode, uiLabel);\n        userSettingsUSMap.define(keyCode, usUserSettingsLabel);\n        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n    }\n    define(0 /* Unknown */, 'unknown');\n    define(1 /* Backspace */, 'Backspace');\n    define(2 /* Tab */, 'Tab');\n    define(3 /* Enter */, 'Enter');\n    define(4 /* Shift */, 'Shift');\n    define(5 /* Ctrl */, 'Ctrl');\n    define(6 /* Alt */, 'Alt');\n    define(7 /* PauseBreak */, 'PauseBreak');\n    define(8 /* CapsLock */, 'CapsLock');\n    define(9 /* Escape */, 'Escape');\n    define(10 /* Space */, 'Space');\n    define(11 /* PageUp */, 'PageUp');\n    define(12 /* PageDown */, 'PageDown');\n    define(13 /* End */, 'End');\n    define(14 /* Home */, 'Home');\n    define(15 /* LeftArrow */, 'LeftArrow', 'Left');\n    define(16 /* UpArrow */, 'UpArrow', 'Up');\n    define(17 /* RightArrow */, 'RightArrow', 'Right');\n    define(18 /* DownArrow */, 'DownArrow', 'Down');\n    define(19 /* Insert */, 'Insert');\n    define(20 /* Delete */, 'Delete');\n    define(21 /* KEY_0 */, '0');\n    define(22 /* KEY_1 */, '1');\n    define(23 /* KEY_2 */, '2');\n    define(24 /* KEY_3 */, '3');\n    define(25 /* KEY_4 */, '4');\n    define(26 /* KEY_5 */, '5');\n    define(27 /* KEY_6 */, '6');\n    define(28 /* KEY_7 */, '7');\n    define(29 /* KEY_8 */, '8');\n    define(30 /* KEY_9 */, '9');\n    define(31 /* KEY_A */, 'A');\n    define(32 /* KEY_B */, 'B');\n    define(33 /* KEY_C */, 'C');\n    define(34 /* KEY_D */, 'D');\n    define(35 /* KEY_E */, 'E');\n    define(36 /* KEY_F */, 'F');\n    define(37 /* KEY_G */, 'G');\n    define(38 /* KEY_H */, 'H');\n    define(39 /* KEY_I */, 'I');\n    define(40 /* KEY_J */, 'J');\n    define(41 /* KEY_K */, 'K');\n    define(42 /* KEY_L */, 'L');\n    define(43 /* KEY_M */, 'M');\n    define(44 /* KEY_N */, 'N');\n    define(45 /* KEY_O */, 'O');\n    define(46 /* KEY_P */, 'P');\n    define(47 /* KEY_Q */, 'Q');\n    define(48 /* KEY_R */, 'R');\n    define(49 /* KEY_S */, 'S');\n    define(50 /* KEY_T */, 'T');\n    define(51 /* KEY_U */, 'U');\n    define(52 /* KEY_V */, 'V');\n    define(53 /* KEY_W */, 'W');\n    define(54 /* KEY_X */, 'X');\n    define(55 /* KEY_Y */, 'Y');\n    define(56 /* KEY_Z */, 'Z');\n    define(57 /* Meta */, 'Meta');\n    define(58 /* ContextMenu */, 'ContextMenu');\n    define(59 /* F1 */, 'F1');\n    define(60 /* F2 */, 'F2');\n    define(61 /* F3 */, 'F3');\n    define(62 /* F4 */, 'F4');\n    define(63 /* F5 */, 'F5');\n    define(64 /* F6 */, 'F6');\n    define(65 /* F7 */, 'F7');\n    define(66 /* F8 */, 'F8');\n    define(67 /* F9 */, 'F9');\n    define(68 /* F10 */, 'F10');\n    define(69 /* F11 */, 'F11');\n    define(70 /* F12 */, 'F12');\n    define(71 /* F13 */, 'F13');\n    define(72 /* F14 */, 'F14');\n    define(73 /* F15 */, 'F15');\n    define(74 /* F16 */, 'F16');\n    define(75 /* F17 */, 'F17');\n    define(76 /* F18 */, 'F18');\n    define(77 /* F19 */, 'F19');\n    define(78 /* NumLock */, 'NumLock');\n    define(79 /* ScrollLock */, 'ScrollLock');\n    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\n    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\n    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\n    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\n    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\n    define(85 /* US_SLASH */, '/', '/', 'OEM_2');\n    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\n    define(110 /* ABNT_C1 */, 'ABNT_C1');\n    define(111 /* ABNT_C2 */, 'ABNT_C2');\n    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\n    define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\n    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\n    define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\n    define(91 /* OEM_8 */, 'OEM_8');\n    define(92 /* OEM_102 */, 'OEM_102');\n    define(93 /* NUMPAD_0 */, 'NumPad0');\n    define(94 /* NUMPAD_1 */, 'NumPad1');\n    define(95 /* NUMPAD_2 */, 'NumPad2');\n    define(96 /* NUMPAD_3 */, 'NumPad3');\n    define(97 /* NUMPAD_4 */, 'NumPad4');\n    define(98 /* NUMPAD_5 */, 'NumPad5');\n    define(99 /* NUMPAD_6 */, 'NumPad6');\n    define(100 /* NUMPAD_7 */, 'NumPad7');\n    define(101 /* NUMPAD_8 */, 'NumPad8');\n    define(102 /* NUMPAD_9 */, 'NumPad9');\n    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\n    define(104 /* NUMPAD_ADD */, 'NumPad_Add');\n    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\n    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\n    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\n    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    var chordPart = ((secondPart & 0x0000ffff) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\nexport function createKeybinding(keybinding, OS) {\n    if (keybinding === 0) {\n        return null;\n    }\n    var firstPart = (keybinding & 0x0000ffff) >>> 0;\n    var chordPart = (keybinding & 0xffff0000) >>> 16;\n    if (chordPart !== 0) {\n        return new ChordKeybinding(createSimpleKeybinding(firstPart, OS), createSimpleKeybinding(chordPart, OS));\n    }\n    return createSimpleKeybinding(firstPart, OS);\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n    var ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\n    var winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\n    var ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\n    var shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\n    var altKey = (keybinding & 512 /* Alt */ ? true : false);\n    var metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\n    var keyCode = (keybinding & 255 /* KeyCode */);\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\nvar SimpleKeybinding = /** @class */ (function () {\n    function SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.type = 1 /* Simple */;\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    SimpleKeybinding.prototype.equals = function (other) {\n        if (other.type !== 1 /* Simple */) {\n            return false;\n        }\n        return (this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    };\n    SimpleKeybinding.prototype.isModifierKey = function () {\n        return (this.keyCode === 0 /* Unknown */\n            || this.keyCode === 5 /* Ctrl */\n            || this.keyCode === 57 /* Meta */\n            || this.keyCode === 6 /* Alt */\n            || this.keyCode === 4 /* Shift */);\n    };\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    SimpleKeybinding.prototype.isDuplicateModifierCase = function () {\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\n            || (this.altKey && this.keyCode === 6 /* Alt */)\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\n    };\n    return SimpleKeybinding;\n}());\nexport { SimpleKeybinding };\nvar ChordKeybinding = /** @class */ (function () {\n    function ChordKeybinding(firstPart, chordPart) {\n        this.type = 2 /* Chord */;\n        this.firstPart = firstPart;\n        this.chordPart = chordPart;\n    }\n    return ChordKeybinding;\n}());\nexport { ChordKeybinding };\nvar ResolvedKeybindingPart = /** @class */ (function () {\n    function ResolvedKeybindingPart(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = kbLabel;\n        this.keyAriaLabel = kbAriaLabel;\n    }\n    return ResolvedKeybindingPart;\n}());\nexport { ResolvedKeybindingPart };\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nvar ResolvedKeybinding = /** @class */ (function () {\n    function ResolvedKeybinding() {\n    }\n    return ResolvedKeybinding;\n}());\nexport { ResolvedKeybinding };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Range } from './range.js';\nimport { Position } from './position.js';\n/**\n * The direction of a selection.\n */\nexport var SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nvar Selection = /** @class */ (function (_super) {\n    __extends(Selection, _super);\n    function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        var _this = _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) || this;\n        _this.selectionStartLineNumber = selectionStartLineNumber;\n        _this.selectionStartColumn = selectionStartColumn;\n        _this.positionLineNumber = positionLineNumber;\n        _this.positionColumn = positionColumn;\n        return _this;\n    }\n    /**\n     * Clone this selection.\n     */\n    Selection.prototype.clone = function () {\n        return new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Transform to a human-readable representation.\n     */\n    Selection.prototype.toString = function () {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    };\n    /**\n     * Test if equals other selection.\n     */\n    Selection.prototype.equalsSelection = function (other) {\n        return (Selection.selectionsEqual(this, other));\n    };\n    /**\n     * Test if the two selections are equal.\n     */\n    Selection.selectionsEqual = function (a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    };\n    /**\n     * Get directions (LTR or RTL).\n     */\n    Selection.prototype.getDirection = function () {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return SelectionDirection.LTR;\n        }\n        return SelectionDirection.RTL;\n    };\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        if (this.getDirection() === SelectionDirection.LTR) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.getPosition = function () {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        if (this.getDirection() === SelectionDirection.LTR) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    };\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    Selection.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    Selection.liftSelection = function (sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    };\n    /**\n     * `a` equals `b`.\n     */\n    Selection.selectionsArrEqual = function (a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    Selection.isISelection = function (obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    };\n    /**\n     * Create with a direction.\n     */\n    Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === SelectionDirection.LTR) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    };\n    return Selection;\n}(Range));\nexport { Selection };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { Event, Emitter } from './event.js';\nvar shortcutEvent = Object.freeze(function (callback, context) {\n    var handle = setTimeout(callback.bind(context), 0);\n    return { dispose: function () { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nvar MutableToken = /** @class */ (function () {\n    function MutableToken() {\n        this._isCancelled = false;\n    }\n    MutableToken.prototype.cancel = function () {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    };\n    Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\n        get: function () {\n            return this._isCancelled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\n        get: function () {\n            if (this._isCancelled) {\n                return shortcutEvent;\n            }\n            if (!this._emitter) {\n                this._emitter = new Emitter();\n            }\n            return this._emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MutableToken.prototype.dispose = function () {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    };\n    return MutableToken;\n}());\nvar CancellationTokenSource = /** @class */ (function () {\n    function CancellationTokenSource() {\n    }\n    Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\n        get: function () {\n            if (!this._token) {\n                // be lazy and create the token only when\n                // actually needed\n                this._token = new MutableToken();\n            }\n            return this._token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CancellationTokenSource.prototype.cancel = function () {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    };\n    CancellationTokenSource.prototype.dispose = function () {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    };\n    return CancellationTokenSource;\n}());\nexport { CancellationTokenSource };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection, SelectionDirection } from '../core/selection.js';\nimport { TPromise } from '../../../base/common/winjs.base.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Token } from '../core/token.js';\nimport URI from '../../../base/common/uri.js';\n// --------------------------------------------\n// This is repeated here so it can be exported\n// because TS inlines const enums\n// --------------------------------------------\nexport var MarkerTag;\n(function (MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n})(MarkerTag || (MarkerTag = {}));\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n// --------------------------------------------\n// This is repeated here so it can be exported\n// because TS inlines const enums\n// --------------------------------------------\nvar KeyMod = /** @class */ (function () {\n    function KeyMod() {\n    }\n    KeyMod.chord = function (firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    };\n    KeyMod.CtrlCmd = 2048 /* CtrlCmd */;\n    KeyMod.Shift = 1024 /* Shift */;\n    KeyMod.Alt = 512 /* Alt */;\n    KeyMod.WinCtrl = 256 /* WinCtrl */;\n    return KeyMod;\n}());\nexport { KeyMod };\n// --------------------------------------------\n// This is repeated here so it can be exported\n// because TS inlines const enums\n// --------------------------------------------\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport var KeyCode;\n(function (KeyCode) {\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\n    KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\n    KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\n    KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\n    KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\n    KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\n    KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\n    KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\n    KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\n    KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\n    KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\n    KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\n    KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\n    KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\n    KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\n    KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\n    KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\n    KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\n    KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\n    KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\n    KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\n    KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\n    KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\n    KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\n    KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\n    KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\n    KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\n    KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\n    KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\n    KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\n    KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\n    KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\n    KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\n    KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\n    KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\n    KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\n    KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\n    KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\n    KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\n    KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\n    KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\n    KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\n    KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\n    KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\n    KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\n    KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\n    KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\n    KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\n    KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\n    KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\nexport function createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: SelectionDirection,\n        MarkerSeverity: MarkerSeverity,\n        MarkerTag: MarkerTag,\n        Promise: TPromise,\n        Uri: URI,\n        Token: Token\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar Token = /** @class */ (function () {\n    function Token(offset, type, language) {\n        this.offset = offset | 0; // @perf\n        this.type = type;\n        this.language = language;\n    }\n    Token.prototype.toString = function () {\n        return '(' + this.offset + ', ' + this.type + ')';\n    };\n    return Token;\n}());\nexport { Token };\nvar TokenizationResult = /** @class */ (function () {\n    function TokenizationResult(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult;\n}());\nexport { TokenizationResult };\nvar TokenizationResult2 = /** @class */ (function () {\n    function TokenizationResult2(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult2;\n}());\nexport { TokenizationResult2 };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport URI from '../../../base/common/uri.js';\nimport { TPromise } from '../../../base/common/winjs.base.js';\nimport { Range } from '../core/range.js';\nimport { DiffComputer } from '../diff/diffComputer.js';\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { Position } from '../core/position.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { computeLinks } from '../modes/linkComputer.js';\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\nimport { getWordAtText, ensureValidWordDefinition } from '../model/wordHelper.js';\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\nimport { globals } from '../../../base/common/platform.js';\n/**\n * @internal\n */\nvar MirrorModel = /** @class */ (function (_super) {\n    __extends(MirrorModel, _super);\n    function MirrorModel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MirrorModel.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"version\", {\n        get: function () {\n            return this._versionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"eol\", {\n        get: function () {\n            return this._eol;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MirrorModel.prototype.getValue = function () {\n        return this.getText();\n    };\n    MirrorModel.prototype.getLinesContent = function () {\n        return this._lines.slice(0);\n    };\n    MirrorModel.prototype.getLineCount = function () {\n        return this._lines.length;\n    };\n    MirrorModel.prototype.getLineContent = function (lineNumber) {\n        return this._lines[lineNumber - 1];\n    };\n    MirrorModel.prototype.getWordAtPosition = function (position, wordDefinition) {\n        var wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    };\n    MirrorModel.prototype.getWordUntilPosition = function (position, wordDefinition) {\n        var wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n        if (!wordAtPosition) {\n            return {\n                word: '',\n                startColumn: position.column,\n                endColumn: position.column\n            };\n        }\n        return {\n            word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n            startColumn: wordAtPosition.startColumn,\n            endColumn: position.column\n        };\n    };\n    MirrorModel.prototype.createWordIterator = function (wordDefinition) {\n        var _this = this;\n        var obj = {\n            done: false,\n            value: ''\n        };\n        var lineNumber = 0;\n        var lineText;\n        var wordRangesIdx = 0;\n        var wordRanges = [];\n        var next = function () {\n            if (wordRangesIdx < wordRanges.length) {\n                obj.done = false;\n                obj.value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                wordRangesIdx += 1;\n            }\n            else if (lineNumber >= _this._lines.length) {\n                obj.done = true;\n                obj.value = undefined;\n            }\n            else {\n                lineText = _this._lines[lineNumber];\n                wordRanges = _this._wordenize(lineText, wordDefinition);\n                wordRangesIdx = 0;\n                lineNumber += 1;\n                return next();\n            }\n            return obj;\n        };\n        return { next: next };\n    };\n    MirrorModel.prototype._wordenize = function (content, wordDefinition) {\n        var result = [];\n        var match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    };\n    MirrorModel.prototype.getValueInRange = function (range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        var lineEnding = this._eol;\n        var startLineIndex = range.startLineNumber - 1;\n        var endLineIndex = range.endLineNumber - 1;\n        var resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (var i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    };\n    MirrorModel.prototype.offsetAt = function (position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n    };\n    MirrorModel.prototype.positionAt = function (offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        var out = this._lineStarts.getIndexOf(offset);\n        var lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    };\n    MirrorModel.prototype._validateRange = function (range) {\n        var start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        var end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    };\n    MirrorModel.prototype._validatePosition = function (position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        var lineNumber = position.lineNumber, column = position.column;\n        var hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            var maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber: lineNumber, column: column };\n        }\n    };\n    return MirrorModel;\n}(BaseMirrorModel));\n/**\n * @internal\n */\nvar BaseEditorSimpleWorker = /** @class */ (function () {\n    function BaseEditorSimpleWorker(foreignModuleFactory) {\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n        var original = this._getModel(originalUrl);\n        var modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return null;\n        }\n        var originalLines = original.getLinesContent();\n        var modifiedLines = modified.getLinesContent();\n        var diffComputer = new DiffComputer(originalLines, modifiedLines, {\n            shouldComputeCharChanges: true,\n            shouldPostProcessCharChanges: true,\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n            shouldMakePrettyDiff: true\n        });\n        return TPromise.as(diffComputer.computeDiff());\n    };\n    BaseEditorSimpleWorker.prototype.computeMoreMinimalEdits = function (modelUrl, edits) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return TPromise.as(edits);\n        }\n        var result = [];\n        var lastEol;\n        for (var _i = 0, edits_1 = edits; _i < edits_1.length; _i++) {\n            var _a = edits_1[_i], range = _a.range, text = _a.text, eol = _a.eol;\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (!range) {\n                // eol-change only\n                continue;\n            }\n            var original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                // noop\n                continue;\n            }\n            // make sure diff won't take too long\n            if (Math.max(text.length, original.length) > BaseEditorSimpleWorker._diffLimit) {\n                result.push({ range: range, text: text });\n                continue;\n            }\n            // compute diff between original and edit.text\n            var changes = stringDiff(original, text, false);\n            var editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n            for (var _b = 0, changes_1 = changes; _b < changes_1.length; _b++) {\n                var change = changes_1[_b];\n                var start = model.positionAt(editOffset + change.originalStart);\n                var end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                var newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: undefined, range: undefined });\n        }\n        return TPromise.as(result);\n    };\n    // ---- END minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeLinks = function (modelUrl) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return TPromise.as(computeLinks(model));\n    };\n    BaseEditorSimpleWorker.prototype.textualSuggest = function (modelUrl, position, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (model) {\n            var suggestions = [];\n            var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            var currentWord = model.getWordUntilPosition(position, wordDefRegExp).word;\n            var seen = Object.create(null);\n            seen[currentWord] = true;\n            for (var iter = model.createWordIterator(wordDefRegExp), e = iter.next(); !e.done && suggestions.length <= BaseEditorSimpleWorker._suggestionsLimit; e = iter.next()) {\n                var word = e.value;\n                if (seen[word]) {\n                    continue;\n                }\n                seen[word] = true;\n                if (!isNaN(Number(word))) {\n                    continue;\n                }\n                suggestions.push({\n                    type: 'text',\n                    label: word,\n                    insertText: word,\n                    noAutoAccept: true,\n                    overwriteBefore: currentWord.length\n                });\n            }\n            return TPromise.as({ suggestions: suggestions });\n        }\n        return undefined;\n    };\n    // ---- END suggest --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.navigateValueSet = function (modelUrl, range, up, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        var selectionText = model.getValueInRange(range);\n        var wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        var word = null;\n        if (wordRange !== null) {\n            word = model.getValueInRange(wordRange);\n        }\n        var result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return TPromise.as(result);\n    };\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.loadForeignModule = function (moduleId, createData) {\n        var _this = this;\n        var ctx = {\n            getMirrorModels: function () {\n                return _this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            var methods = [];\n            for (var prop in this._foreignModule) {\n                if (typeof this._foreignModule[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return TPromise.as(methods);\n        }\n        // ESM-comment-begin\n        // \t\treturn new TPromise<any>((c, e) => {\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n        // \n        // \t\t\t\tlet methods: string[] = [];\n        // \t\t\t\tfor (let prop in this._foreignModule) {\n        // \t\t\t\t\tif (typeof this._foreignModule[prop] === 'function') {\n        // \t\t\t\t\t\tmethods.push(prop);\n        // \t\t\t\t\t}\n        // \t\t\t\t}\n        // \n        // \t\t\t\tc(methods);\n        // \n        // \t\t\t}, e);\n        // \t\t});\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        return TPromise.wrapError(new Error(\"Unexpected usage\"));\n        // ESM-uncomment-end\n    };\n    // foreign method request\n    BaseEditorSimpleWorker.prototype.fmr = function (method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return TPromise.wrapError(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return TPromise.as(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return TPromise.wrapError(e);\n        }\n    };\n    // ---- END diff --------------------------------------------------------------------------\n    // ---- BEGIN minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker._diffLimit = 10000;\n    // ---- BEGIN suggest --------------------------------------------------------------------------\n    BaseEditorSimpleWorker._suggestionsLimit = 10000;\n    return BaseEditorSimpleWorker;\n}());\nexport { BaseEditorSimpleWorker };\n/**\n * @internal\n */\nvar EditorSimpleWorkerImpl = /** @class */ (function (_super) {\n    __extends(EditorSimpleWorkerImpl, _super);\n    function EditorSimpleWorkerImpl(foreignModuleFactory) {\n        var _this = _super.call(this, foreignModuleFactory) || this;\n        _this._models = Object.create(null);\n        return _this;\n    }\n    EditorSimpleWorkerImpl.prototype.dispose = function () {\n        this._models = Object.create(null);\n    };\n    EditorSimpleWorkerImpl.prototype._getModel = function (uri) {\n        return this._models[uri];\n    };\n    EditorSimpleWorkerImpl.prototype._getModels = function () {\n        var _this = this;\n        var all = [];\n        Object.keys(this._models).forEach(function (key) { return all.push(_this._models[key]); });\n        return all;\n    };\n    EditorSimpleWorkerImpl.prototype.acceptNewModel = function (data) {\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptModelChanged = function (strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        var model = this._models[strURL];\n        model.onEvents(e);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptRemovedModel = function (strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    };\n    return EditorSimpleWorkerImpl;\n}(BaseEditorSimpleWorker));\nexport { EditorSimpleWorkerImpl };\n/**\n * Called on the worker side\n * @internal\n */\nexport function create() {\n    return new EditorSimpleWorkerImpl(null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    globals.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as errors from './errors.js';\nimport { TPromise } from './winjs.base.js';\nimport { CancellationTokenSource } from './cancellation.js';\nimport { Disposable } from './lifecycle.js';\nexport function isThenable(obj) {\n    return obj && typeof obj.then === 'function';\n}\nexport function toThenable(arg) {\n    if (isThenable(arg)) {\n        return arg;\n    }\n    else {\n        return TPromise.as(arg);\n    }\n}\nexport function createCancelablePromise(callback) {\n    var source = new CancellationTokenSource();\n    var thenable = callback(source.token);\n    var promise = new Promise(function (resolve, reject) {\n        source.token.onCancellationRequested(function () {\n            reject(errors.canceled());\n        });\n        Promise.resolve(thenable).then(function (value) {\n            source.dispose();\n            resolve(value);\n        }, function (err) {\n            source.dispose();\n            reject(err);\n        });\n    });\n    return new /** @class */ (function () {\n        function class_1() {\n        }\n        class_1.prototype.cancel = function () {\n            source.cancel();\n        };\n        class_1.prototype.then = function (resolve, reject) {\n            return promise.then(resolve, reject);\n        };\n        class_1.prototype.catch = function (reject) {\n            return this.then(undefined, reject);\n        };\n        return class_1;\n    }());\n}\nexport function asWinJsPromise(callback) {\n    var source = new CancellationTokenSource();\n    return new TPromise(function (resolve, reject, progress) {\n        var item = callback(source.token);\n        if (item instanceof TPromise) {\n            item.then(function (result) {\n                source.dispose();\n                resolve(result);\n            }, function (err) {\n                source.dispose();\n                reject(err);\n            }, progress);\n        }\n        else if (isThenable(item)) {\n            item.then(function (result) {\n                source.dispose();\n                resolve(result);\n            }, function (err) {\n                source.dispose();\n                reject(err);\n            });\n        }\n        else {\n            source.dispose();\n            resolve(item);\n        }\n    }, function () {\n        source.cancel();\n    });\n}\n/**\n * Hook a cancellation token to a WinJS Promise\n */\nexport function wireCancellationToken(token, promise, resolveAsUndefinedWhenCancelled) {\n    var subscription = token.onCancellationRequested(function () { return promise.cancel(); });\n    if (resolveAsUndefinedWhenCancelled) {\n        promise = promise.then(undefined, function (err) {\n            if (!errors.isPromiseCanceledError(err)) {\n                return TPromise.wrapError(err);\n            }\n            return undefined;\n        });\n    }\n    return always(promise, function () { return subscription.dispose(); });\n}\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nvar Throttler = /** @class */ (function () {\n    function Throttler() {\n        this.activePromise = null;\n        this.queuedPromise = null;\n        this.queuedPromiseFactory = null;\n    }\n    Throttler.prototype.queue = function (promiseFactory) {\n        var _this = this;\n        if (this.activePromise) {\n            this.queuedPromiseFactory = promiseFactory;\n            if (!this.queuedPromise) {\n                var onComplete_1 = function () {\n                    _this.queuedPromise = null;\n                    var result = _this.queue(_this.queuedPromiseFactory);\n                    _this.queuedPromiseFactory = null;\n                    return result;\n                };\n                this.queuedPromise = new TPromise(function (c, e, p) {\n                    _this.activePromise.then(onComplete_1, onComplete_1, p).done(c);\n                }, function () {\n                    _this.activePromise.cancel();\n                });\n            }\n            return new TPromise(function (c, e, p) {\n                _this.queuedPromise.then(c, e, p);\n            }, function () {\n                // no-op\n            });\n        }\n        this.activePromise = promiseFactory();\n        return new TPromise(function (c, e, p) {\n            _this.activePromise.done(function (result) {\n                _this.activePromise = null;\n                c(result);\n            }, function (err) {\n                _this.activePromise = null;\n                e(err);\n            }, p);\n        }, function () {\n            _this.activePromise.cancel();\n        });\n    };\n    return Throttler;\n}());\nexport { Throttler };\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nvar Delayer = /** @class */ (function () {\n    function Delayer(defaultDelay) {\n        this.defaultDelay = defaultDelay;\n        this.timeout = null;\n        this.completionPromise = null;\n        this.onSuccess = null;\n        this.task = null;\n    }\n    Delayer.prototype.trigger = function (task, delay) {\n        var _this = this;\n        if (delay === void 0) { delay = this.defaultDelay; }\n        this.task = task;\n        this.cancelTimeout();\n        if (!this.completionPromise) {\n            this.completionPromise = new TPromise(function (c) {\n                _this.onSuccess = c;\n            }, function () {\n                // no-op\n            }).then(function () {\n                _this.completionPromise = null;\n                _this.onSuccess = null;\n                var task = _this.task;\n                _this.task = null;\n                return task();\n            });\n        }\n        this.timeout = setTimeout(function () {\n            _this.timeout = null;\n            _this.onSuccess(null);\n        }, delay);\n        return this.completionPromise;\n    };\n    Delayer.prototype.cancel = function () {\n        this.cancelTimeout();\n        if (this.completionPromise) {\n            this.completionPromise.cancel();\n            this.completionPromise = null;\n        }\n    };\n    Delayer.prototype.cancelTimeout = function () {\n        if (this.timeout !== null) {\n            clearTimeout(this.timeout);\n            this.timeout = null;\n        }\n    };\n    return Delayer;\n}());\nexport { Delayer };\nvar ShallowCancelThenPromise = /** @class */ (function (_super) {\n    __extends(ShallowCancelThenPromise, _super);\n    function ShallowCancelThenPromise(outer) {\n        var _this = this;\n        var completeCallback, errorCallback, progressCallback;\n        _this = _super.call(this, function (c, e, p) {\n            completeCallback = c;\n            errorCallback = e;\n            progressCallback = p;\n        }, function () {\n            // cancel this promise but not the\n            // outer promise\n            errorCallback(errors.canceled());\n        }) || this;\n        outer.then(completeCallback, errorCallback, progressCallback);\n        return _this;\n    }\n    return ShallowCancelThenPromise;\n}(TPromise));\nexport { ShallowCancelThenPromise };\n/**\n * Replacement for `WinJS.TPromise.timeout`.\n */\nexport function timeout(n) {\n    return createCancelablePromise(function (token) {\n        return new Promise(function (resolve, reject) {\n            var handle = setTimeout(resolve, n);\n            token.onCancellationRequested(function (_) {\n                clearTimeout(handle);\n                reject(errors.canceled());\n            });\n        });\n    });\n}\nfunction isWinJSPromise(candidate) {\n    return TPromise.is(candidate) && typeof candidate.done === 'function';\n}\nexport function always(winjsPromiseOrThenable, f) {\n    if (isWinJSPromise(winjsPromiseOrThenable)) {\n        return new TPromise(function (c, e, p) {\n            winjsPromiseOrThenable.done(function (result) {\n                try {\n                    f(result);\n                }\n                catch (e1) {\n                    errors.onUnexpectedError(e1);\n                }\n                c(result);\n            }, function (err) {\n                try {\n                    f(err);\n                }\n                catch (e1) {\n                    errors.onUnexpectedError(e1);\n                }\n                e(err);\n            }, function (progress) {\n                p(progress);\n            });\n        }, function () {\n            winjsPromiseOrThenable.cancel();\n        });\n    }\n    else {\n        // simple\n        winjsPromiseOrThenable.then(function (_) { return f(); }, function (_) { return f(); });\n        return winjsPromiseOrThenable;\n    }\n}\nexport function first2(promiseFactories, shouldStop, defaultValue) {\n    if (shouldStop === void 0) { shouldStop = function (t) { return !!t; }; }\n    if (defaultValue === void 0) { defaultValue = null; }\n    var index = 0;\n    var len = promiseFactories.length;\n    var loop = function () {\n        if (index >= len) {\n            return Promise.resolve(defaultValue);\n        }\n        var factory = promiseFactories[index++];\n        var promise = factory();\n        return promise.then(function (result) {\n            if (shouldStop(result)) {\n                return Promise.resolve(result);\n            }\n            return loop();\n        });\n    };\n    return loop();\n}\nexport function first(promiseFactories, shouldStop, defaultValue) {\n    if (shouldStop === void 0) { shouldStop = function (t) { return !!t; }; }\n    if (defaultValue === void 0) { defaultValue = null; }\n    var index = 0;\n    var len = promiseFactories.length;\n    var loop = function () {\n        if (index >= len) {\n            return TPromise.as(defaultValue);\n        }\n        var factory = promiseFactories[index++];\n        var promise = factory();\n        return promise.then(function (result) {\n            if (shouldStop(result)) {\n                return TPromise.as(result);\n            }\n            return loop();\n        });\n    };\n    return loop();\n}\nexport function setDisposableTimeout(handler, timeout) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    var handle = setTimeout.apply(void 0, [handler, timeout].concat(args));\n    return { dispose: function () { clearTimeout(handle); } };\n}\nvar TimeoutTimer = /** @class */ (function (_super) {\n    __extends(TimeoutTimer, _super);\n    function TimeoutTimer() {\n        var _this = _super.call(this) || this;\n        _this._token = -1;\n        return _this;\n    }\n    TimeoutTimer.prototype.dispose = function () {\n        this.cancel();\n        _super.prototype.dispose.call(this);\n    };\n    TimeoutTimer.prototype.cancel = function () {\n        if (this._token !== -1) {\n            clearTimeout(this._token);\n            this._token = -1;\n        }\n    };\n    TimeoutTimer.prototype.cancelAndSet = function (runner, timeout) {\n        var _this = this;\n        this.cancel();\n        this._token = setTimeout(function () {\n            _this._token = -1;\n            runner();\n        }, timeout);\n    };\n    TimeoutTimer.prototype.setIfNotSet = function (runner, timeout) {\n        var _this = this;\n        if (this._token !== -1) {\n            // timer is already set\n            return;\n        }\n        this._token = setTimeout(function () {\n            _this._token = -1;\n            runner();\n        }, timeout);\n    };\n    return TimeoutTimer;\n}(Disposable));\nexport { TimeoutTimer };\nvar IntervalTimer = /** @class */ (function (_super) {\n    __extends(IntervalTimer, _super);\n    function IntervalTimer() {\n        var _this = _super.call(this) || this;\n        _this._token = -1;\n        return _this;\n    }\n    IntervalTimer.prototype.dispose = function () {\n        this.cancel();\n        _super.prototype.dispose.call(this);\n    };\n    IntervalTimer.prototype.cancel = function () {\n        if (this._token !== -1) {\n            clearInterval(this._token);\n            this._token = -1;\n        }\n    };\n    IntervalTimer.prototype.cancelAndSet = function (runner, interval) {\n        this.cancel();\n        this._token = setInterval(function () {\n            runner();\n        }, interval);\n    };\n    return IntervalTimer;\n}(Disposable));\nexport { IntervalTimer };\nvar RunOnceScheduler = /** @class */ (function () {\n    function RunOnceScheduler(runner, timeout) {\n        this.timeoutToken = -1;\n        this.runner = runner;\n        this.timeout = timeout;\n        this.timeoutHandler = this.onTimeout.bind(this);\n    }\n    /**\n     * Dispose RunOnceScheduler\n     */\n    RunOnceScheduler.prototype.dispose = function () {\n        this.cancel();\n        this.runner = null;\n    };\n    /**\n     * Cancel current scheduled runner (if any).\n     */\n    RunOnceScheduler.prototype.cancel = function () {\n        if (this.isScheduled()) {\n            clearTimeout(this.timeoutToken);\n            this.timeoutToken = -1;\n        }\n    };\n    /**\n     * Cancel previous runner (if any) & schedule a new runner.\n     */\n    RunOnceScheduler.prototype.schedule = function (delay) {\n        if (delay === void 0) { delay = this.timeout; }\n        this.cancel();\n        this.timeoutToken = setTimeout(this.timeoutHandler, delay);\n    };\n    /**\n     * Returns true if scheduled.\n     */\n    RunOnceScheduler.prototype.isScheduled = function () {\n        return this.timeoutToken !== -1;\n    };\n    RunOnceScheduler.prototype.onTimeout = function () {\n        this.timeoutToken = -1;\n        if (this.runner) {\n            this.doRun();\n        }\n    };\n    RunOnceScheduler.prototype.doRun = function () {\n        this.runner();\n    };\n    return RunOnceScheduler;\n}());\nexport { RunOnceScheduler };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Disposable } from '../lifecycle.js';\nimport { TPromise } from '../winjs.base.js';\nimport { ShallowCancelThenPromise } from '../async.js';\nimport { isWeb } from '../platform.js';\nvar INITIALIZE = '$initialize';\nvar webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nvar SimpleWorkerProtocol = /** @class */ (function () {\n    function SimpleWorkerProtocol(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n    }\n    SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\n        this._workerId = workerId;\n    };\n    SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\n        var req = String(++this._lastSentReq);\n        var reply = {\n            c: null,\n            e: null\n        };\n        var result = new TPromise(function (c, e) {\n            reply.c = c;\n            reply.e = e;\n        }, function () {\n            // Cancel not supported\n        });\n        this._pendingReplies[req] = reply;\n        this._send({\n            vsWorker: this._workerId,\n            req: req,\n            method: method,\n            args: args\n        });\n        return result;\n    };\n    SimpleWorkerProtocol.prototype.handleMessage = function (serializedMessage) {\n        var message;\n        try {\n            message = JSON.parse(serializedMessage);\n        }\n        catch (e) {\n            // nothing\n        }\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    };\n    SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\n        var _this = this;\n        if (msg.seq) {\n            var replyMessage = msg;\n            if (!this._pendingReplies[replyMessage.seq]) {\n                console.warn('Got reply to unknown seq');\n                return;\n            }\n            var reply = this._pendingReplies[replyMessage.seq];\n            delete this._pendingReplies[replyMessage.seq];\n            if (replyMessage.err) {\n                var err = replyMessage.err;\n                if (replyMessage.err.$isError) {\n                    err = new Error();\n                    err.name = replyMessage.err.name;\n                    err.message = replyMessage.err.message;\n                    err.stack = replyMessage.err.stack;\n                }\n                reply.e(err);\n                return;\n            }\n            reply.c(replyMessage.res);\n            return;\n        }\n        var requestMessage = msg;\n        var req = requestMessage.req;\n        var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then(function (r) {\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: r,\n                err: undefined\n            });\n        }, function (e) {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: undefined,\n                err: transformErrorForSerialization(e)\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype._send = function (msg) {\n        var strMsg = JSON.stringify(msg);\n        // console.log('SENDING: ' + strMsg);\n        this._handler.sendMessage(strMsg);\n    };\n    return SimpleWorkerProtocol;\n}());\n/**\n * Main thread side\n */\nvar SimpleWorkerClient = /** @class */ (function (_super) {\n    __extends(SimpleWorkerClient, _super);\n    function SimpleWorkerClient(workerFactory, moduleId) {\n        var _this = _super.call(this) || this;\n        var lazyProxyFulfill = null;\n        var lazyProxyReject = null;\n        _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\n            _this._protocol.handleMessage(msg);\n        }, function (err) {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            lazyProxyReject(err);\n        }));\n        _this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                _this._worker.postMessage(msg);\n            },\n            handleMessage: function (method, args) {\n                // Intentionally not supporting worker -> main requests\n                return TPromise.as(null);\n            }\n        });\n        _this._protocol.setWorkerId(_this._worker.getId());\n        // Gather loader configuration\n        var loaderConfiguration = null;\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = self.require.getConfig();\n        }\n        else if (typeof self.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = self.requirejs.s.contexts._.config;\n        }\n        _this._lazyProxy = new TPromise(function (c, e) {\n            lazyProxyFulfill = c;\n            lazyProxyReject = e;\n        }, function () { });\n        // Send initialize message\n        _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [\n            _this._worker.getId(),\n            moduleId,\n            loaderConfiguration\n        ]);\n        _this._onModuleLoaded.then(function (availableMethods) {\n            var proxy = {};\n            for (var i = 0; i < availableMethods.length; i++) {\n                proxy[availableMethods[i]] = createProxyMethod(availableMethods[i], proxyMethodRequest);\n            }\n            lazyProxyFulfill(proxy);\n        }, function (e) {\n            lazyProxyReject(e);\n            _this._onError('Worker failed to load ' + moduleId, e);\n        });\n        // Create proxy to loaded code\n        var proxyMethodRequest = function (method, args) {\n            return _this._request(method, args);\n        };\n        var createProxyMethod = function (method, proxyMethodRequest) {\n            return function () {\n                var args = Array.prototype.slice.call(arguments, 0);\n                return proxyMethodRequest(method, args);\n            };\n        };\n        return _this;\n    }\n    SimpleWorkerClient.prototype.getProxyObject = function () {\n        // Do not allow chaining promises to cancel the proxy creation\n        return new ShallowCancelThenPromise(this._lazyProxy);\n    };\n    SimpleWorkerClient.prototype._request = function (method, args) {\n        var _this = this;\n        return new TPromise(function (c, e) {\n            _this._onModuleLoaded.then(function () {\n                _this._protocol.sendMessage(method, args).then(c, e);\n            }, e);\n        }, function () {\n            // Cancel intentionally not supported\n        });\n    };\n    SimpleWorkerClient.prototype._onError = function (message, error) {\n        console.error(message);\n        console.info(error);\n    };\n    return SimpleWorkerClient;\n}(Disposable));\nexport { SimpleWorkerClient };\n/**\n * Worker side\n */\nvar SimpleWorkerServer = /** @class */ (function () {\n    function SimpleWorkerServer(postSerializedMessage, requestHandler) {\n        var _this = this;\n        this._requestHandler = requestHandler;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                postSerializedMessage(msg);\n            },\n            handleMessage: function (method, args) { return _this._handleMessage(method, args); }\n        });\n    }\n    SimpleWorkerServer.prototype.onmessage = function (msg) {\n        this._protocol.handleMessage(msg);\n    };\n    SimpleWorkerServer.prototype._handleMessage = function (method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return TPromise.wrapError(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return TPromise.as(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return TPromise.wrapError(e);\n        }\n    };\n    SimpleWorkerServer.prototype.initialize = function (workerId, moduleId, loaderConfig) {\n        var _this = this;\n        this._protocol.setWorkerId(workerId);\n        if (this._requestHandler) {\n            // static request handler\n            var methods = [];\n            for (var prop in this._requestHandler) {\n                if (typeof this._requestHandler[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return TPromise.as(methods);\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            self.require.config(loaderConfig);\n        }\n        var cc;\n        var ee;\n        var r = new TPromise(function (c, e) {\n            cc = c;\n            ee = e;\n        });\n        // Use the global require to be sure to get the global config\n        self.require([moduleId], function () {\n            var result = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                result[_i] = arguments[_i];\n            }\n            var handlerModule = result[0];\n            _this._requestHandler = handlerModule.create();\n            var methods = [];\n            for (var prop in _this._requestHandler) {\n                if (typeof _this._requestHandler[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            cc(methods);\n        }, ee);\n        return r;\n    };\n    return SimpleWorkerServer;\n}());\nexport { SimpleWorkerServer };\n/**\n * Called on the worker side\n */\nexport function create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { EditorSimpleWorkerImpl } from './common/services/editorSimpleWorker.js';\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nvar initialized = false;\nexport function initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var editorWorker = new EditorSimpleWorkerImpl(foreignModule);\n    var simpleWorker = new SimpleWorkerServer(function (msg) {\n        self.postMessage(msg);\n    }, editorWorker);\n    self.onmessage = function (e) {\n        simpleWorker.onmessage(e.data);\n    };\n}\nself.onmessage = function (e) {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n"],"sourceRoot":""}